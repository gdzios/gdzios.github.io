<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一碗汤不热</title>
  <subtitle>既然青春留不住 不如做个大叔好</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://gdzios.eward.win/"/>
  <updated>2017-06-23T05:21:13.409Z</updated>
  <id>http://gdzios.eward.win/</id>
  
  <author>
    <name>CH</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JSP Standard Tag Library</title>
    <link href="http://gdzios.eward.win/2017/06/23/site7/"/>
    <id>http://gdzios.eward.win/2017/06/23/site7/</id>
    <published>2017-06-23T02:32:29.000Z</published>
    <updated>2017-06-23T05:21:13.409Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Jstl介绍"><a href="#Jstl介绍" class="headerlink" title="Jstl介绍"></a>Jstl介绍</h1><h2 id="什么是Jstl？"><a href="#什么是Jstl？" class="headerlink" title="什么是Jstl？"></a>什么是Jstl？</h2><p>Jstl全称：Java Servlet Standard Tag Library,即JSP标准标签库，它包含了我们在开发jsp页面时经常用到的一组标准标签库，这些标签为我们提供了一种不用嵌入java代码，就可以开发复杂的jsp页面的途径。</p>
<p> Jstl通常会与EL表达式合作实现JSP页面的编号。</p>
<a id="more"></a>
<h2 id="Jstl环境搭建"><a href="#Jstl环境搭建" class="headerlink" title="Jstl环境搭建"></a>Jstl环境搭建</h2><ol>
<li>导入jar包</li>
</ol>
<p>2.引用核心标签库<br> <code>&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot;%&gt;</code></p>
<p>一般情况下，用MyEclipse都会默认导入jar包的，手动<a href="http://archive.apache.org/dist/jakarta/taglibs/standard/bnaries" target="_blank" rel="external">下载地址</a></p>
<h1 id="Jstl标准标签库"><a href="#Jstl标准标签库" class="headerlink" title="Jstl标准标签库"></a>Jstl标准标签库</h1><p>核心标签库</p>
<h2 id="按照功能的不同又分为："><a href="#按照功能的不同又分为：" class="headerlink" title="按照功能的不同又分为："></a>按照功能的不同又分为：</h2><ol>
<li>通用标签库：<code>set</code> <code>out</code> <code>remove</code></li>
<li>条件标签库：<code>if</code> <code>choose</code></li>
<li>迭代标签库：<code>forEach</code></li>
</ol>
<h2 id="通用标签库："><a href="#通用标签库：" class="headerlink" title="通用标签库："></a>通用标签库：</h2><p>用于在jsp页面内设置，删除和显示变量，</p>
<h3 id="set：设置置顶范围的变量值，其语法格式分为两种："><a href="#set：设置置顶范围的变量值，其语法格式分为两种：" class="headerlink" title="set：设置置顶范围的变量值，其语法格式分为两种："></a>set：设置置顶范围的变量值，其语法格式分为两种：</h3><p>将value值存储到范围为scope的变量variable中</p>
<pre><code>&lt;c:set var=&quot;variable&quot; value=&quot;&quot; scope=&quot;scope&quot;/&gt;
</code></pre><p>将value值存储到target对象的属性中</p>
<pre><code>&lt;s:set target=&quot;target&quot; property=&quot;property&quot; value=&quot;&quot;/&gt;
</code></pre><h3 id="out-计算表达式并将结果输出显示："><a href="#out-计算表达式并将结果输出显示：" class="headerlink" title="out:计算表达式并将结果输出显示："></a>out:计算表达式并将结果输出显示：</h3><p>不指定默认值</p>
<c:out value="">

<p>指定默认值</p>
<c:out value="" default="default">

<p>remove: 删除指定范围内的变量</p>
<pre><code>&lt;c:remove var=&quot;value&quot; scope=&quot;scope&quot;/&gt;
</code></pre><h2 id="条件标签库"><a href="#条件标签库" class="headerlink" title="条件标签库"></a>条件标签库</h2><p>if ：功能和java语言中的完全相同，</p>
<c:if test="condition" var="varName" scope="scope">

<p>test指条件 后面通常不写的：var存储判断后的结果， scope指定范围。</p>
<p>choose：实现java语言中 if—else if—else</p>
<pre><code>&lt;c:choose var = &quot;varName&quot; scope=&quot;scope&quot;&gt;
    &lt;c:when test=&quot;condition&quot;&gt;
        主体内容
    &lt;/c:when&gt;
        &lt;c:other wise&gt;
        主体内容
        &lt;/c:otherwise&gt;
&lt;/c:choose&gt;
</code></pre><h2 id="迭代标签库"><a href="#迭代标签库" class="headerlink" title="迭代标签库"></a>迭代标签库</h2><p>两种语法：遍历集合，语句循环执行指定次数</p>
<h3 id="遍历集合对象的成员"><a href="#遍历集合对象的成员" class="headerlink" title="遍历集合对象的成员"></a>遍历集合对象的成员</h3><pre><code>&lt;c:forEach var =&quot;varName&quot; items=&quot;collectionName&quot;
    varStatus=&quot;varStatusName&quot; begin=&quot;beginIndex&quot;
    end=&quot;endIndex&quot; step=&quot;step&quot;&gt;
&lt;/c:forEach&gt;
</code></pre><h3 id="指定语句的执行次数"><a href="#指定语句的执行次数" class="headerlink" title="指定语句的执行次数"></a>指定语句的执行次数</h3><pre><code>&lt;c:forEach var =&quot;varName&quot; varStatus=&quot;varStatusName&quot;
    begin =&quot;beginIndex&quot; end = &quot;endIndex&quot; step=&quot;step&quot;
&lt;/c:forEach&gt;
</code></pre></c:if></c:out></c:out>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Jstl介绍&quot;&gt;&lt;a href=&quot;#Jstl介绍&quot; class=&quot;headerlink&quot; title=&quot;Jstl介绍&quot;&gt;&lt;/a&gt;Jstl介绍&lt;/h1&gt;&lt;h2 id=&quot;什么是Jstl？&quot;&gt;&lt;a href=&quot;#什么是Jstl？&quot; class=&quot;headerlink&quot; title=&quot;什么是Jstl？&quot;&gt;&lt;/a&gt;什么是Jstl？&lt;/h2&gt;&lt;p&gt;Jstl全称：Java Servlet Standard Tag Library,即JSP标准标签库，它包含了我们在开发jsp页面时经常用到的一组标准标签库，这些标签为我们提供了一种不用嵌入java代码，就可以开发复杂的jsp页面的途径。&lt;/p&gt;
&lt;p&gt; Jstl通常会与EL表达式合作实现JSP页面的编号。&lt;/p&gt;
    
    </summary>
    
      <category term="web前端" scheme="http://gdzios.eward.win/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="JSP" scheme="http://gdzios.eward.win/tags/JSP/"/>
    
      <category term="JSP标签" scheme="http://gdzios.eward.win/tags/JSP%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>EL表达式</title>
    <link href="http://gdzios.eward.win/2017/06/19/site6/"/>
    <id>http://gdzios.eward.win/2017/06/19/site6/</id>
    <published>2017-06-19T05:43:13.000Z</published>
    <updated>2017-06-23T05:21:01.093Z</updated>
    
    <content type="html"><![CDATA[<h1 id="EL语法结构"><a href="#EL语法结构" class="headerlink" title="EL语法结构"></a>EL语法结构</h1><pre><code>${EL表达式}
</code></pre><h1 id="使用变量名获取值："><a href="#使用变量名获取值：" class="headerlink" title="使用变量名获取值："></a>使用变量名获取值：</h1><a id="more"></a>
<pre><code>${变量名}
page---${pageScope.usename},找不到返回 null
request---${requestScope.usename},找不到返回 null
session---${sessionScope.usename},找不到返回 null
application---${applicationScope.usename},找不到返回 null
</code></pre><p>不指定范围也可以，他会自动依次在四大作用域去寻找，没有返回null；效率低，容易受同名变量干扰。</p>
<h1 id="获取对象属性："><a href="#获取对象属性：" class="headerlink" title="获取对象属性："></a>获取对象属性：</h1><h2 id="点操作符"><a href="#点操作符" class="headerlink" title="点操作符"></a>点操作符</h2><pre><code>${user.username}
</code></pre><h2 id="操作符"><a href="#操作符" class="headerlink" title="[ ]操作符"></a>[ ]操作符</h2><pre><code>${user[&quot;username&quot;]}
</code></pre><h2 id="区别："><a href="#区别：" class="headerlink" title="区别："></a>区别：</h2><ol>
<li>当属性名中包含特殊字符，例如·或-等情况下，不用点操作符来访问，這时只能用[ ]操作符；</li>
<li>访问数组，链表等</li>
</ol>
<h1 id="获取集合："><a href="#获取集合：" class="headerlink" title="获取集合："></a>获取集合：</h1><pre><code>&lt;body&gt;

&lt;% List names = new ArrayList();

 names.add(0, &quot;tom&quot;);

 names.add(1, &quot;lusi&quot;);

 request.setAttribute(&quot;names&quot;, names);
 %&gt; 

姓名： ${names[0] }&lt;br&gt;

姓名： ${names[1] } 

&lt;% Map name = new HashMap();

 name.put(&quot;one&quot;, &quot;wangba&quot;);

 name.put(&quot;two&quot;, &quot;huahua&quot;);

 request.setAttribute(&quot;name&quot;, name); %&gt;
 &lt;br&gt;

姓名： ${name.one }&lt;br&gt;

姓名： ${name[&quot;two&quot;] } 

&lt;/body&gt;
</code></pre><h1 id="关系操作符"><a href="#关系操作符" class="headerlink" title="关系操作符"></a>关系操作符</h1><p>EL表达式支持大部分Java所提供的算术和逻辑操作符：</p>
<pre><code>== eq         ${8==5}  ${8eq5} ---&gt; false
!= ne         ${8!=5}  ${8eq5} ---&gt; true
 &lt; lt         ${8&lt;5}   ${8eq5} ---&gt; false
 &gt; gt          ${8&gt;5}   ${8eq5} ---&gt; true
&lt;= le
&gt;= ge
/ or div  除
% or mod  取模
&amp;&amp; or and    测试逻辑与
|| or or    测试逻辑或
!  or not    测试取反
empty        测试是否为空
</code></pre><h1 id="EL隐式对象："><a href="#EL隐式对象：" class="headerlink" title="EL隐式对象："></a>EL隐式对象：</h1><p>作用域访问对象：</p>
<pre><code>pageScope
requestScope
sessionScope
applicationScope
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;EL语法结构&quot;&gt;&lt;a href=&quot;#EL语法结构&quot; class=&quot;headerlink&quot; title=&quot;EL语法结构&quot;&gt;&lt;/a&gt;EL语法结构&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;${EL表达式}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;使用变量名获取值：&quot;&gt;&lt;a href=&quot;#使用变量名获取值：&quot; class=&quot;headerlink&quot; title=&quot;使用变量名获取值：&quot;&gt;&lt;/a&gt;使用变量名获取值：&lt;/h1&gt;
    
    </summary>
    
      <category term="web前端" scheme="http://gdzios.eward.win/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="EL表达式" scheme="http://gdzios.eward.win/tags/EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>基于Next主题美化教程(关注微信gdz_hz获取密钥)</title>
    <link href="http://gdzios.eward.win/2017/06/08/site5/"/>
    <id>http://gdzios.eward.win/2017/06/08/site5/</id>
    <published>2017-06-08T08:24:15.000Z</published>
    <updated>2017-06-23T05:19:49.794Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p>看到有些next主题的网站很炫酷，那么是怎么配置的呢？接下来我会讲一讲如何实现一些炫酷的效果</p>
</blockquote>
<p><img src="http://i.imgur.com/Blh9NFd.png" alt=""></p>
<a id="more"></a>
<p>主要有以下28种（后续继续增加）：</p>
<ul>
<li>在右上角或者左上角实现fork me on github</li>
<li>为Hexo Next主题添加哈林摇特效</li>
<li>添加动态背景</li>
<li>实现点击出现桃心效果</li>
<li>修改文章内链接文本样式</li>
<li>修改文章底部的那个带#号的标签</li>
<li>在每篇文章末尾统一添加“本文结束”标记</li>
<li>修改作者头像并旋转</li>
<li>博文压缩</li>
<li>修改``代码块自定义样式</li>
<li>侧边栏社交小图标设置</li>
<li>主页文章添加阴影效果</li>
<li>在网站底部加上访问量</li>
<li>添加热度</li>
<li>网站底部字数统计</li>
<li>添加 README.md 文件</li>
<li>设置网站的图标Favicon</li>
<li>实现统计功能</li>
<li>添加顶部加载条</li>
<li>添加网易云跟帖</li>
<li>隐藏网页底部powered By Hexo / 强力驱动</li>
<li>修改网页底部的桃心</li>
<li>文章加密访问</li>
<li>添加jiathis分享</li>
<li>博文置顶</li>
<li>修改字体大小</li>
<li>修改打赏字体不闪动</li>
<li>侧边栏推荐阅读</li>
</ul>
<h1 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h1><h2 id="实现效果图"><a href="#实现效果图" class="headerlink" title="实现效果图"></a>实现效果图</h2><p><img src="http://i.imgur.com/6dVuwej.png" alt="公众号gdz_hz"></p>
<h2 id="具体实现方法"><a href="#具体实现方法" class="headerlink" title="具体实现方法"></a>具体实现方法</h2><p><a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="external">点击我进去</a>挑选自己喜欢的样式，并复制代码。 例如，我是复制如下代码：<br><img src="http://i.imgur.com/VAAaKyX.png" alt="公众号gdz_hz"></p>
<p>然后粘贴刚才复制的代码到<code>themes/next/layout/_layout.swig</code>文件中(放在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>的下面)，并把<code>href</code>改为你的<code>github</code>地址<br><img src="http://i.imgur.com/fEVIyU9.png" alt="公众号gdz_hz"></p>
<h1 id="为Hexo-Next主题添加哈林摇特效"><a href="#为Hexo-Next主题添加哈林摇特效" class="headerlink" title="为Hexo Next主题添加哈林摇特效"></a>为Hexo Next主题添加哈林摇特效</h1><h2 id="实现效果图-1"><a href="#实现效果图-1" class="headerlink" title="实现效果图"></a>实现效果图</h2><p>点击下面图片看视频效果</p>
<p><a href="http://v.youku.com/v_show/id_XMTY0ODY1Nzk0MA==.html" target="_blank" rel="external"><img src="http://i.imgur.com/n0gANjq.png" alt=""></a></p>
<h2 id="具体实现方法-1"><a href="#具体实现方法-1" class="headerlink" title="具体实现方法"></a>具体实现方法</h2><h3 id="创建特效文件"><a href="#创建特效文件" class="headerlink" title="创建特效文件"></a>创建特效文件</h3><p>在主题目录中，创建<code>layout\_macro\high.swig</code>，添加如下代码：</p>
<pre><code>  &lt;a title=&quot;收藏到书签，偶尔High一下^_^&quot; rel=&quot;alternate&quot; class=&quot;mw-harlem_shake_slow wobble shake&quot; href=&apos;javascript:(function() {
    function c() {
        var e = document.createElement(&quot;link&quot;);
        e.setAttribute(&quot;type&quot;, &quot;text/css&quot;);
        e.setAttribute(&quot;rel&quot;, &quot;stylesheet&quot;);
        e.setAttribute(&quot;href&quot;, f);
        e.setAttribute(&quot;class&quot;, l);
        document.body.appendChild(e)
    }

    function h() {
        var e = document.getElementsByClassName(l);
        for (var t = 0; t &lt; e.length; t++) {
            document.body.removeChild(e[t])
        }
    }

    function p() {
        var e = document.createElement(&quot;div&quot;);
        e.setAttribute(&quot;class&quot;, a);
        document.body.appendChild(e);
        setTimeout(function() {
            document.body.removeChild(e)
        }, 100)
    }

    function d(e) {
        return {
            height : e.offsetHeight,
            width : e.offsetWidth
        }
    }

    function v(i) {
        var s = d(i);
        return s.height &gt; e &amp;&amp; s.height &lt; n &amp;&amp; s.width &gt; t &amp;&amp; s.width &lt; r
    }

    function m(e) {
        var t = e;
        var n = 0;
        while (!!t) {
            n += t.offsetTop;
            t = t.offsetParent
        }
        return n
    }

    function g() {
        var e = document.documentElement;
        if (!!window.innerWidth) {
            return window.innerHeight
        } else if (e &amp;&amp; !isNaN(e.clientHeight)) {
            return e.clientHeight
        }
        return 0
    }

    function y() {
        if (window.pageYOffset) {
            return window.pageYOffset
        }
        return Math.max(document.documentElement.scrollTop, document.body.scrollTop)
    }

    function E(e) {
        var t = m(e);
        return t &gt;= w &amp;&amp; t &lt;= b + w
    }

    function S() {
        var e = document.createElement(&quot;audio&quot;);
        e.setAttribute(&quot;class&quot;, l);
        e.src = i;
        e.loop = false;
        e.addEventListener(&quot;canplay&quot;, function() {
            setTimeout(function() {
                x(k)
            }, 500);
            setTimeout(function() {
                N();
                p();
                for (var e = 0; e &lt; O.length; e++) {
                    T(O[e])
                }
            }, 15500)
        }, true);
        e.addEventListener(&quot;ended&quot;, function() {
            N();
            h()
        }, true);
        e.innerHTML = &quot; &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;&quot;;
        document.body.appendChild(e);
        e.play()
    }

    function x(e) {
        e.className += &quot; &quot; + s + &quot; &quot; + o
    }

    function T(e) {
        e.className += &quot; &quot; + s + &quot; &quot; + u[Math.floor(Math.random() * u.length)]
    }

    function N() {
        var e = document.getElementsByClassName(s);
        var t = new RegExp(&quot;\\b&quot; + s + &quot;\\b&quot;);
        for (var n = 0; n &lt; e.length; ) {
            e[n].className = e[n].className.replace(t, &quot;&quot;)
        }
    }

    var e = 30;
    var t = 30;
    var n = 350;
    var r = 350;
    var i = &quot;//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake.mp3&quot;;
    var s = &quot;mw-harlem_shake_me&quot;;
    var o = &quot;im_first&quot;;
    var u = [&quot;im_drunk&quot;, &quot;im_baked&quot;, &quot;im_trippin&quot;, &quot;im_blown&quot;];
    var a = &quot;mw-strobe_light&quot;;
    var f = &quot;//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css&quot;;
    var l = &quot;mw_added_css&quot;;
    var b = g();
    var w = y();
    var C = document.getElementsByTagName(&quot;*&quot;);
    var k = null;
    for (var L = 0; L &lt; C.length; L++) {
        var A = C[L];
        if (v(A)) {
            if (E(A)) {
                k = A;
                break
            }
        }
    }
    if (A === null) {
        console.warn(&quot;Could not find a node of the right size. Please try a different page.&quot;);
        return
    }
    c();
    S();
    var O = [];
    for (var L = 0; L &lt; C.length; L++) {
        var A = C[L];
        if (v(A)) {
            O.push(A)
        }
    }
})()&apos;&gt;&lt;i class=&quot;fa fa-music&quot;&gt;&lt;/i&gt; High&lt;/a&gt;
</code></pre><h3 id="引用特效代码"><a href="#引用特效代码" class="headerlink" title="引用特效代码"></a>引用特效代码</h3><p>在侧边栏，引用特效代码。在主题目录，修改<code>layout\_macro\sidebar.swig</code>：</p>
<pre><code>{% include 'high.swig' %}
</code></pre><p><img src="http://www.iamlj.com/2016/08/add-special-effect-harlem-shake-for-hexo/20160802003240.png" alt="公众号gdz_hz"></p>
<h3 id="样式修改"><a href="#样式修改" class="headerlink" title="样式修改"></a>样式修改</h3><p>（这里，我使用的是其它Pisces主题，其它主题请自行按照此法调试）<br>将”High”和”RSS”并排展示，在主题目录中，修改<code>source\css\_schemes\Pisces\_sidebar.styl</code></p>
<pre><code>display: inline-block;
</code></pre><p><img src="http://www.iamlj.com/2016/08/add-special-effect-harlem-shake-for-hexo/20160802003448.png" alt=""></p>
<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>关于优化，建议将<code>layout\_macro\high.swig</code>中的<code>harlem-shake.mp3</code>和<code>harlem-shake.css</code>放到<code>cdn</code>上，然后引用<code>cdn</code>地址，加快访问速度。</p>
<h1 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h1><p>实现效果图<br><img src="http://upload-images.jianshu.io/upload_images/5308475-ef603580be708882.gif?imageMogr2/auto-orient/strip" alt=""></p>
<p>具体实现方法</p>
<p>咱们直接搬出文档吧，<a href="http://theme-next.iissnan.com/theme-settings.html#use-bg-animation" target="_blank" rel="external">点我</a></p>
<h1 id="实现点击出现桃心效果"><a href="#实现点击出现桃心效果" class="headerlink" title="实现点击出现桃心效果"></a>实现点击出现桃心效果</h1><p>实现效果图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-78e64c0a80bb559e.gif?imageMogr2/auto-orient/strip" alt=""></p>
<h2 id="具体实现方法-2"><a href="#具体实现方法-2" class="headerlink" title="具体实现方法"></a>具体实现方法</h2><p>在浏览器输入如下网址：</p>
<pre><code>http://7u2ss1.com1.z0.glb.clouddn.com/love.js
</code></pre><p>然后将里面的代码<code>copy</code>一下，新建<code>love.js</code>文件并且将代码复制进去，然后保存。将<code>love.js</code>文件放到路径<code>/themes/next/source/js/src</code>里面，然后打开<code>\themes\next\layout\_layout.swig</code>文件,在末尾（在前面引用会出现找不到的bug）添加以下代码：</p>
<pre><code>&lt;!-- 页面点击小红心 --&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;script&gt;
</code></pre><h1 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h1><h2 id="实现效果图-2"><a href="#实现效果图-2" class="headerlink" title="实现效果图"></a>实现效果图</h2><p><img src="http://upload-images.jianshu.io/upload_images/5308475-8cc4fc18c399af7e.gif?imageMogr2/auto-orient/strip" alt=""></p>
<h2 id="具体实现方法-3"><a href="#具体实现方法-3" class="headerlink" title="具体实现方法"></a>具体实现方法</h2><p>修改文件 <code>themes\next\source\css\_common\components\post\post.styl</code>，在末尾添加如下<code>css</code>样式，：</p>
<pre><code>// 文章内链接文本样式
.post-body p a{
color: #0593d3;
  border-bottom: none;
    border-bottom: 1px solid #0593d3;
      &amp;:hover {
         color: #fc6423;
          border-bottom: none;
              border-bottom: 1px solid #fc6423;
         }
  }
</code></pre><p>其中选择<code>.post-body</code> 是为了不影响标题，选择<code>p</code>是为了不影响首页“阅读全文”的显示样式,颜色可以自己定义。</p>
<h1 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带#号的标签"></a>修改文章底部的那个带#号的标签</h1><p>实现效果图</p>
<p><img src="http://i.imgur.com/AjfCJpn.png" alt=""><br>具体实现方法</p>
<p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将<code>#</code> 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p>
<h1 id="在每篇文章末尾统一添加“本文结束”标记"><a href="#在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="在每篇文章末尾统一添加“本文结束”标记"></a>在每篇文章末尾统一添加“本文结束”标记</h1><p>实现效果图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-90be73acbc5f8a7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>具体实现方法</p>
<p>在路径 <code>\themes\next\layout\_macro</code> 中新建 <code>passage-end-tag.swig</code> 文件,并添加以下内容：</p>
<pre><code>&lt;div&gt;
    {% if not is_index %}
	             <div style="text-align:center;color: #ccc;font-size:14px;">-------------本文结束<i class="fa fa-paw"></i>感谢您的阅读-------------</div>
	             {% endif %}
            &lt;/div&gt;
</code></pre><p>接着打开<code>\themes\next\layout\_macro\post.swig</code>文件，在<code>post-body</code> 之后， <code>post-footer</code> 之前添加如下画红色部分代码（<code>post-footer</code>之前两个<code>DIV</code>）：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-865c7f94f89b907e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>代码如下：</p>
<pre><code>&lt;div&gt;
  {% if not is_index %}
	       {% include 'passage-end-tag.swig' %}
	         {% endif %}
  &lt;/div&gt;
</code></pre><p>然后打开主题配置文件（<code>_config.yml</code>),在末尾添加：</p>
<pre><code>#文章末尾添加“本文结束”标记
   passage_end_tag:
    enabled: true
</code></pre><p>完成以上设置之后，在每篇文章之后都会添加如上效果图的样子。</p>
<h1 id="修改作者头像并旋转"><a href="#修改作者头像并旋转" class="headerlink" title="修改作者头像并旋转"></a>修改作者头像并旋转</h1><p>实现效果图</p>
<p>直接看我的<a href="http://javaweb.win" target="_blank" rel="external">博客</a>吧，鼠标移动到头像</p>
<p>具体实现方法</p>
<p>打开<code>\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>，在里面添加如下代码：</p>
<pre><code>.site-author-image {
  display: block;
  margin: 0 auto;
  padding: $site-author-image-padding;
  max-width: $site-author-image-width;
  height: $site-author-image-height;
  border: $site-author-image-border-width solid $site-author-image-border-color;
  /* 头像圆形 */
  border-radius: 80px;
  -webkit-border-radius: 80px;
  -moz-border-radius: 80px;
  box-shadow: inset 0 -1px 0 #333sf;
  /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 
    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/

  /* 鼠标经过头像旋转360度 */
  -webkit-transition: -webkit-transform 1.0s ease-out;
  -moz-transition: -moz-transform 1.0s ease-out;
  transition: transform 1.0s ease-out;
}
img:hover {
  /* 鼠标经过停止头像旋转 
  -webkit-animation-play-state:paused;
  animation-play-state:paused;*/
  /* 鼠标经过头像旋转360度 */
  -webkit-transform: rotateZ(360deg);
  -moz-transform: rotateZ(360deg);
  transform: rotateZ(360deg);
}
/* Z 轴旋转动画 */
@-webkit-keyframes play {
  0% {
    -webkit-transform: rotateZ(0deg);
  }
  100% {
    -webkit-transform: rotateZ(-360deg);
  }
}
@-moz-keyframes play {
  0% {
    -moz-transform: rotateZ(0deg);
  }
  100% {
    -moz-transform: rotateZ(-360deg);
  }
}
@keyframes play {
  0% {
    transform: rotateZ(0deg);
  }
  100% {
    transform: rotateZ(-360deg);
  }
}
</code></pre><h1 id="博文压缩"><a href="#博文压缩" class="headerlink" title="博文压缩"></a>博文压缩</h1><p>在站点的根目录下执行以下命令：</p>
<pre><code>$ npm install gulp -g
$ npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save
</code></pre><p>在如下图所示，新建 <code>gulpfile.js</code> ，并填入以下内容：</p>
<pre><code>var gulp = require(&apos;gulp&apos;);
var minifycss = require(&apos;gulp-minify-css&apos;);
var uglify = require(&apos;gulp-uglify&apos;);
var htmlmin = require(&apos;gulp-htmlmin&apos;);
var htmlclean = require(&apos;gulp-htmlclean&apos;);
// 压缩 public 目录 css
gulp.task(&apos;minify-css&apos;, function() {
    return gulp.src(&apos;./public/**/*.css&apos;)
        .pipe(minifycss())
        .pipe(gulp.dest(&apos;./public&apos;));
});
// 压缩 public 目录 html
gulp.task(&apos;minify-html&apos;, function() {
  return gulp.src(&apos;./public/**/*.html&apos;)
    .pipe(htmlclean())
    .pipe(htmlmin({
         removeComments: true,
         minifyJS: true,
         minifyCSS: true,
         minifyURLs: true,
    }))
    .pipe(gulp.dest(&apos;./public&apos;))
});
// 压缩 public/js 目录 js
gulp.task(&apos;minify-js&apos;, function() {
    return gulp.src(&apos;./public/**/*.js&apos;)
        .pipe(uglify())
        .pipe(gulp.dest(&apos;./public&apos;));
});
// 执行 gulp 命令时执行的任务
gulp.task(&apos;default&apos;, [
    &apos;minify-html&apos;,&apos;minify-css&apos;,&apos;minify-js&apos;
]);
</code></pre><p>生成博文是执行<code>hexo g &amp;&amp; gulp</code>就会根据 <code>gulpfile.js</code> 中的配置，对<code>public</code>目录中的静态资源文件进行压缩。</p>
<h1 id="修改-代码块自定义样式"><a href="#修改-代码块自定义样式" class="headerlink" title="修改``代码块自定义样式"></a>修改``代码块自定义样式</h1><p>实现效果图</p>
<p><img src="http://i.imgur.com/ElR5vl7.png" alt=""><br>具体实现方法</p>
<p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：(颜色可以自己定义)</p>
<pre><code>// Custom styles.
code {
    color: #ff7600;
    background: #fbf7f8;
    margin: 2px;
}
// 大代码块的自定义样式
.highlight, pre {
    margin: 5px 0;
    padding: 5px;
    border-radius: 3px;
}
.highlight, code, pre {
    border: 1px solid #d6d6d6;
}
</code></pre><h1 id="侧边栏社交小图标设置"><a href="#侧边栏社交小图标设置" class="headerlink" title="侧边栏社交小图标设置"></a>侧边栏社交小图标设置</h1><p>实现效果图</p>
<p><img src="http://i.imgur.com/BSgwFkf.png" alt=""><br>具体实现方法</p>
<p>打开主题配置文件<code>_config.yml</code>，搜索<code>social_icons:</code>,在<a href="http://fontawesome.io/icons/" target="_blank" rel="external">图标库</a>找自己喜欢的小图标，并将名字复制在如下位置，保存即可</p>
<p><img src="http://i.imgur.com/OaakQ6k.png" alt=""></p>
<h1 id="主页文章添加阴影效果"><a href="#主页文章添加阴影效果" class="headerlink" title="主页文章添加阴影效果"></a>主页文章添加阴影效果</h1><p>实现效果图</p>
<p><img src="http://i.imgur.com/FLG5DVi.png" alt=""></p>
<p>具体实现方法</p>
<p>打开<code>\themes\next\source\css\_custom\custom.sty</code>l,向里面加入：</p>
<pre><code>// 主页文章添加阴影效果
 .post {
   margin-top: 60px;
   margin-bottom: 60px;
   padding: 25px;
   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);
   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);
  }
</code></pre><h1 id="在网站底部加上访问量"><a href="#在网站底部加上访问量" class="headerlink" title="在网站底部加上访问量"></a>在网站底部加上访问量</h1><p>实现效果图</p>
<p><img src="http://i.imgur.com/YeLjA1c.png" alt=""></p>
<p>具体实现方法</p>
<p>文档里面也有哦 我用的<a href="http://theme-next.iissnan.com/third-party-services.html#analytics-busuanzi" target="_blank" rel="external">不蒜子统计</a></p>
<h1 id="添加热度"><a href="#添加热度" class="headerlink" title="添加热度"></a>添加热度</h1><p>实现效果图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-9bc8a6587cd1a575.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>具体实现方法</p>
<p><code>next</code>主题集成<code>leanCloud</code>，打开<code>/themes/next/layout/_macro/post.swig</code>,在画红线的区域添加℃：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-f5dbda6888a79dd4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>然后打开，<code>/themes/next/languages/zh-Hans.yml</code>,将画红框的改为热度就可以了</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-bd0e1ac5456a2f0c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="网站底部字数统计"><a href="#网站底部字数统计" class="headerlink" title="网站底部字数统计"></a>网站底部字数统计</h1><p>实现效果图</p>
<p><img src="http://i.imgur.com/YeLjA1c.png" alt=""></p>
<p>具体方法实现</p>
<p>切换到根目录下，然后运行如下代码</p>
<pre><code>$ npm install hexo-wordcount --save
</code></pre><p>然后在<code>/themes/next/layout/_partials/footer.swig</code>文件尾部加上：</p>
<pre><code>&lt;div class=&quot;theme-info&quot;&gt;
  &lt;div class=&quot;powered-by&quot;&gt;&lt;/div&gt;
  &lt;span class=&quot;post-count&quot;&gt;博客全站共{{ totalcount(site) }}字&lt;/span&gt;
&lt;/div&gt;
</code></pre><h1 id="添加-README-md-文件"><a href="#添加-README-md-文件" class="headerlink" title="添加 README.md 文件"></a>添加 README.md 文件</h1><p>每个项目下一般都有一个 <code>README.md</code> 文件，但是使用 <code>hexo</code> 部署到仓库后，项目下是没有 <code>README.md</code> 文件的。</p>
<p>在 <code>Hexo</code> 目录下的 <code>source</code> 根目录下添加一个 <code># README.md #</code>文件，修改站点配置文件 <code>_config.yml</code>，将 <code># skip_render #</code> 参数的值设置为</p>
<pre><code>skip_render: README.md
</code></pre><p>保存退出即可。再次使用 <code>hexo d</code> 命令部署博客的时候就不会在渲染 <code>README.md</code>这个文件了。</p>
<h1 id="设置网站的图标Favicon"><a href="#设置网站的图标Favicon" class="headerlink" title="设置网站的图标Favicon"></a>设置网站的图标Favicon</h1><p>实现效果图</p>
<p><img src="http://i.imgur.com/3wiSXW8.png" alt=""></p>
<p>具体方法实现</p>
<p>在<a href="http://www.easyicon.net/" target="_blank" rel="external">EasyIcon</a>中找一张（32*32）的<code>ico</code>图标,或者去别的网站下载或者制作，并将图标名称改为<code>favicon.ico</code>，然后把图标放在<code>/themes/next/source/images</code>里，并且修改主题配置文件：</p>
<pre><code># Put your favicon.ico into `hexo-site/source/` directory.
favicon: /favicon.ico
</code></pre><h1 id="实现统计功能"><a href="#实现统计功能" class="headerlink" title="实现统计功能"></a>实现统计功能</h1><p>实现效果图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-11cf11fe888748a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>具体实现方法</p>
<p>在根目录下安装 <code>hexo-wordcount</code>,运行：</p>
<pre><code>$ npm install hexo-wordcount --save
</code></pre><p>然后在主题的配置文件中，配置如下：</p>
<pre><code># Post wordcount display settings
# Dependencies: https://github.com/willin/hexo-wordcount
post_wordcount:
  item_text: true
  wordcount: true
  min2read: true
</code></pre><h1 id="添加顶部加载条"><a href="#添加顶部加载条" class="headerlink" title="添加顶部加载条"></a>添加顶部加载条</h1><p>实现效果图</p>
<p>具体看我博客加载效果：<a href="gdzios.github.io">一碗汤不热</a></p>
<p>具体实现方法</p>
<p>现在使用的最新版的<code>next</code>主题，只需修改主题配置文件<code>(_config.yml)</code>将<code>pace: false</code>改为<code>pace: true</code>就行了，你还可以换不同样式的加载条，如下图：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-6d44a78e76dbf950.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="添加网易云跟帖"><a href="#添加网易云跟帖" class="headerlink" title="添加网易云跟帖"></a>添加网易云跟帖</h1><p>具体方法实现</p>
<p><a href="http://theme-next.iissnan.com/third-party-services.html#yungentie" target="_blank" rel="external">Next文档</a></p>
<h1 id="隐藏网页底部powered-By-Hexo强力驱动"><a href="#隐藏网页底部powered-By-Hexo强力驱动" class="headerlink" title="隐藏网页底部powered By Hexo强力驱动"></a>隐藏网页底部<code>powered By Hexo</code>强力驱动</h1><p>打开<code>themes/next/layout/_partials/footer.swig</code>,使用隐藏之间的代码即可，或者直接删除。位置如图：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-8e8340c7a0489bce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="修改网页底部的桃心"><a href="#修改网页底部的桃心" class="headerlink" title="修改网页底部的桃心"></a>修改网页底部的桃心</h1><p>还是打开<code>themes/next/layout/_partials/footer.swig</code>，找到：<br>，然后还是在<a href="http://fontawesome.io/icons/" target="_blank" rel="external">图标库</a>中找到你自己喜欢的图标，然后修改画红线的部分就可以了。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-f6355823aef7f723.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h1><p>实现效果图</p>
<p>看我這篇文章，传送门—-&gt;<a href="http://javaweb.win/2017/06/05/site3/" target="_blank" rel="external">一碗汤不热</a></p>
<p>具体实现方法</p>
<p>打开<code>themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig</code>文件,在<head>标签内插入这样一段代码：</head></p>
<pre><code>&lt;script&gt;
    (function(){
        if(&apos;{{ page.password }}&apos;){
            if (prompt(&apos;请输入文章密码&apos;) !== &apos;{{ page.password }}&apos;){
                alert(&apos;密码错误！&apos;);
                history.back();
            }
        }
    })();
&lt;/script&gt;
</code></pre><p>然后在文章上写成类似这样：</p>
<p><img src="http://i.imgur.com/mVknCOV.png" alt=""></p>
<h1 id="添加jiathis分享"><a href="#添加jiathis分享" class="headerlink" title="添加jiathis分享"></a>添加jiathis分享</h1><p>实现效果图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-a88228b9ea43ab2d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>实现方法</p>
<p>在主题配置文件中，<code>jiathis</code>为<code>true</code>，就行了，如下图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-f381bc9e7c73b1e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>如果你想自定义话，打开<code>themes/next/layout/_partials/share/jiathis.swig</code>修改画红线部分就可以了</p>
<p><img src="http://upload-images.jianshu.io/upload_images/5308475-68c51498744e1636.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h1><p>修改 <code>hero-generator-index</code> 插件，把文件：<code>node_modules/hexo-generator-index/lib/generator.js</code>内的代码替换为：</p>
<pre><code>&apos;use strict&apos;;
var pagination = require(&apos;hexo-pagination&apos;);
module.exports = function(locals){
  var config = this.config;
  var posts = locals.posts;
    posts.data = posts.data.sort(function(a, b) {
        if(a.top &amp;&amp; b.top) { // 两篇文章top都有定义
            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排
            else return b.top - a.top; // 否则按照top值降序排
        }
        else if(a.top &amp;&amp; !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）
            return -1;
        }
        else if(!a.top &amp;&amp; b.top) {
            return 1;
        }
        else return b.date - a.date; // 都没定义按照文章日期降序排
    });
  var paginationDir = config.pagination_dir || &apos;page&apos;;
  return pagination(&apos;&apos;, posts, {
    perPage: config.index_generator.per_page,
    layout: [&apos;index&apos;, &apos;archive&apos;],
    format: paginationDir + &apos;/%d/&apos;,
    data: {
      __index: true
    }
  });
};
</code></pre><p>在文章中添加<code>top</code> 值，数值越大文章越靠前，如</p>
<pre><code>---
title: 为Hexo添加文章置顶功能
date: 2017-05-22 22:45:48
tags: hexo
categories: hexo
copyright: true
`top: 100`
---
</code></pre><h1 id="修改字体大小"><a href="#修改字体大小" class="headerlink" title="修改字体大小"></a>修改字体大小</h1><p>打开<code>\themes\next\source\css\ _variables\base.styl</code>文件，将<code>$font-size-base</code>改成<code>16px</code>，如下所示：</p>
<pre><code>$font-size-base=16px
</code></pre><h1 id="修改打赏字体不闪动"><a href="#修改打赏字体不闪动" class="headerlink" title="修改打赏字体不闪动"></a>修改打赏字体不闪动</h1><p>修改文件<code>next/source/css/_common/components/post/post-reward.styl</code>，然后注释其中的函数<code>wechat:hover和alipay:hover</code>，如下：</p>
<pre><code>/* 注释文字闪动函数
 #wechat:hover p{
    animation: roll 0.1s infinite linear;
    -webkit-animation: roll 0.1s infinite linear;
    -moz-animation: roll 0.1s infinite linear;
}
 #alipay:hover p{
   animation: roll 0.1s infinite linear;
    -webkit-animation: roll 0.1s infinite linear;
    -moz-animation: roll 0.1s infinite linear;
}
*/
</code></pre><h1 id="侧边栏推荐阅读"><a href="#侧边栏推荐阅读" class="headerlink" title="侧边栏推荐阅读"></a>侧边栏推荐阅读</h1><p>看這里—&gt;<a href="http://theme-next.iissnan.com/theme-settings.html#blogroll" target="_blank" rel="external">Next文档</a></p>
<h1 id="参考的文章："><a href="#参考的文章：" class="headerlink" title="参考的文章："></a>参考的文章：</h1><ol>
<li><a href="http://blog.csdn.net/MasterAnt_D/articledetails/56839222" target="_blank" rel="external">http://blog.csdn.net/MasterAnt_D/articledetails/56839222</a></li>
<li><a href="http://zidingyi4qh.com/2017/04/27/NexT%E5%BA%95%E9%83%A8logo%E6%B7%BB%E5%8A%A0%E8%AE%BF%E9%97%AE%E9%87%8F/" target="_blank" rel="external">http://zidingyi4qh.com/2017/04/27/NexT%E5%BA%95%E9%83%A8logo%E6%B7%BB%E5%8A%A0%E8%AE%BF%E9%97%AE%E9%87%8F/</a></li>
<li><a href="https://fuyis.me/2017/01/25/Hexo-theme-next-and-optimized-configuration/" target="_blank" rel="external">https://fuyis.me/2017/01/25/Hexo-theme-next-and-optimized-configuration/</a></li>
<li><a href="http://www.vitah.net/posts/20f300cc/" target="_blank" rel="external">http://www.vitah.net/posts/20f300cc/</a></li>
<li><a href="http://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/" target="_blank" rel="external">http://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</a></li>
</ol>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>以上功能我基本都已经明白其中原理，也部署在博客当中，总结分享出来给大家以供学习之用，有些功能是看的很多大神文章，在此深深感谢，从建立博客之初到现在，学到了很多未知的知识，成就感爆棚。</p>
<p><center><a href="http://gdzios.eward.win/">一碗汤不热</a></center></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;看到有些next主题的网站很炫酷，那么是怎么配置的呢？接下来我会讲一讲如何实现一些炫酷的效果&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/Blh9NFd.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://gdzios.eward.win/categories/Hexo/"/>
    
    
      <category term="Hexo主题" scheme="http://gdzios.eward.win/tags/Hexo%E4%B8%BB%E9%A2%98/"/>
    
      <category term="个性化" scheme="http://gdzios.eward.win/tags/%E4%B8%AA%E6%80%A7%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript正则表达式</title>
    <link href="http://gdzios.eward.win/2017/06/08/site4/"/>
    <id>http://gdzios.eward.win/2017/06/08/site4/</id>
    <published>2017-06-08T06:29:45.000Z</published>
    <updated>2017-06-08T08:10:31.217Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>正则表达式，又称为规则表达式，（<code>Regular Expression</code>）简写：<code>RE</code>,<code>regex</code>或<code>regxp</code>,计算机科学的一个概念。用来检索，替换那些符合某个模式（规则）的文本。</p>
<h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><ol>
<li>灵活性，逻辑性和功能性非常的强；</li>
<li>可以迅速地采用极简单的方式达到字符串的复杂控制。</li>
<li>对于刚接触的人来说，比较晦涩难懂。</li>
</ol>
<a id="more"></a>
<h1 id="匹配原理"><a href="#匹配原理" class="headerlink" title="匹配原理"></a>匹配原理</h1><p>现在有字符串”<code>abcde</code>“,用正则表达式<code>/bcd/</code>进行匹配。首先是表达式<code>b</code>字符在字符串中查找第二个字符b匹配上了，然后用表达式c字符在字符串的<code>b</code>字符之后查找，如果是<code>c</code>字符则匹配成功，再次使用表达式<code>d</code>字符在字符串的<code>c</code>字符之后查找。如果表达式<code>c</code>字符在字符串的<code>b</code>字符之后没能匹配到<code>c</code>字符，则匹配失败，将再次用表达式<code>b</code>字符开始从字符串的<code>b</code>字符之后开始查找。<br>  当表达式没有说明是全局查找时，表达式找到第一个匹配成功的字符串后就返回。当要做全局查找时，将可能返回一个结果数组。</p>
<h1 id="常用于表单验证"><a href="#常用于表单验证" class="headerlink" title="常用于表单验证"></a>常用于表单验证</h1><ol>
<li>减轻服务器的压力</li>
<li>保证输入的数据符合要求</li>
<li>代码简洁，严谨验证文本框内容</li>
</ol>
<h1 id="JavaScript正则表达式符号"><a href="#JavaScript正则表达式符号" class="headerlink" title="JavaScript正则表达式符号 #"></a>JavaScript正则表达式符号 #<img src="http://i.imgur.com/LdzbtIF.png" alt="JavaScript"><img src="http://i.imgur.com/k7TXdl9.png" alt="JavaScript"></h1><h1 id="常用JavaScript正则表达式"><a href="#常用JavaScript正则表达式" class="headerlink" title="常用JavaScript正则表达式"></a>常用JavaScript正则表达式</h1><ul>
<li>匹配数字：/\d+/</li>
<li>匹配子字符串：/abc/</li>
<li>匹配IP地址:：/(\d{1,3}.){3}\d{1,3}/</li>
<li>匹配邮箱：/\w+@.+.\w+/</li>
<li>匹配身份证号码：/dddddd yyyymmdd xxx y/<br>g<h1 id="JavaScript的RegExp对象"><a href="#JavaScript的RegExp对象" class="headerlink" title="JavaScript的RegExp对象"></a>JavaScript的RegExp对象</h1>RegExp对象的构造函数第一个参数为正则表达式的文本内容，第二个参数则为可选项标志，标志可以组合使用。</li>
<li>g(全文查找)</li>
<li>i(忽略大小写)</li>
<li>m(多行查找)</li>
</ul>
<p>普通方式</p>
<pre><code>var reg = /表达式/附加参数
</code></pre><p>构造函数</p>
<pre><code>var reg = new RegExp(&quot;表达式&quot;,&quot;附加参数&quot;)
</code></pre><h2 id="示例1："><a href="#示例1：" class="headerlink" title="示例1："></a>示例1：</h2><pre><code>var re1 = new RegExp(&quot;a&quot;,&quot;g&quot;);//匹配所有的a
var re2 = new RegExp(&quot;a&quot;,&quot;gi&quot;);//匹配所有的a或A
</code></pre><p>正则表达式还有另外一种正则表达式字面量的声明方式</p>
<h2 id="示例2："><a href="#示例2：" class="headerlink" title="示例2："></a>示例2：</h2><pre><code>var re1 = /a/;//匹配a
var re2 = /a/gi;//匹配所有的a或A
</code></pre><h1 id="RegExp对象的方法与属性"><a href="#RegExp对象的方法与属性" class="headerlink" title="RegExp对象的方法与属性"></a>RegExp对象的方法与属性</h1><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>test()<br>exec()<br>compile()</p>
<h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p>source<br>lastindex<br>$1…$9<br>input($_)<br>lastMatch($&amp;)<br>lastParen($+)<br>leftContext($’)<br>rightContext($’)</p>
<h1 id="正则表达式支持JavaScript字符串对象"><a href="#正则表达式支持JavaScript字符串对象" class="headerlink" title="正则表达式支持JavaScript字符串对象"></a>正则表达式支持JavaScript字符串对象</h1><h2 id="String的search方法"><a href="#String的search方法" class="headerlink" title="String的search方法"></a>String的search方法</h2><pre><code>var str = &quot;hello world,hello world&quot;;
alert(str.search(&quot;world&quot;));//输出6
alert(str.search(/world/));//输出6
</code></pre><p>ps：引号包围的是字符串，斜杠包围的是正则表达式。</p>
<h2 id="String的match-方法"><a href="#String的match-方法" class="headerlink" title="String的match()方法"></a>String的match()方法</h2><pre><code>var str2 = &quot;1 plus 2 equal 3 1&quot;
alert(atr2.match(/\d+/g));//输出1，2，3，1
</code></pre><h2 id="String的Replase-方法"><a href="#String的Replase-方法" class="headerlink" title="String的Replase()方法"></a>String的Replase()方法</h2><p>语法:<code>stringObject.replace(regexp/substr,replacement);</code></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>想好了再写</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;正则表达式，又称为规则表达式，（&lt;code&gt;Regular Expression&lt;/code&gt;）简写：&lt;code&gt;RE&lt;/code&gt;,&lt;code&gt;regex&lt;/code&gt;或&lt;code&gt;regxp&lt;/code&gt;,计算机科学的一个概念。用来检索，替换那些符合某个模式（规则）的文本。&lt;/p&gt;
&lt;h1 id=&quot;特点&quot;&gt;&lt;a href=&quot;#特点&quot; class=&quot;headerlink&quot; title=&quot;特点&quot;&gt;&lt;/a&gt;特点&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;灵活性，逻辑性和功能性非常的强；&lt;/li&gt;
&lt;li&gt;可以迅速地采用极简单的方式达到字符串的复杂控制。&lt;/li&gt;
&lt;li&gt;对于刚接触的人来说，比较晦涩难懂。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="web前端" scheme="http://gdzios.eward.win/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Script" scheme="http://gdzios.eward.win/tags/Script/"/>
    
      <category term="正则表达式" scheme="http://gdzios.eward.win/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
      <category term="js" scheme="http://gdzios.eward.win/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Java面试集锦：常见的java异常信息</title>
    <link href="http://gdzios.eward.win/2017/06/05/site3/"/>
    <id>http://gdzios.eward.win/2017/06/05/site3/</id>
    <published>2017-06-05T01:39:28.000Z</published>
    <updated>2017-06-23T03:01:22.780Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h1><p>這篇文章主要介绍了java平时常见的一些异常报错信息，我以文档的形式记录下来，用来复习巩固及其面试用，平时早上地铁公交拿出手机可以看一下。</p>
<h1 id="异常类基本就那两种类型："><a href="#异常类基本就那两种类型：" class="headerlink" title="异常类基本就那两种类型："></a>异常类基本就那两种类型：</h1><ol>
<li><code>Error</code></li>
<li><code>Exception</code><br><img src="http://i.imgur.com/40LnvRk.jpg" alt="Java异常类结构图"></li>
</ol>
<a id="more"></a>
<p>如果说Error类代表了系统和编译的错误；那 Exception类就代表了标准Java库方法所激发的异常。Error类的异常是不允许捕获的，而发生Exception异常的程序可以通过捕获处理后正常运行保持程序的可读性及可靠性。</p>
<p>这其中 Exception类还包含运行异常类（Runtime_Exception）和非运行异常类（Non_RuntimeException）这两个直接的子类。</p>
<p>运行异常类对应于编译错误，它是指Java程序在运行时产生的由解释器引发的各种异常。运行异常可能出现在任何地方，且出现频率很高，出现运行错误往往表示代码有错误，如：算数异常（如被0除）、下标异常（如数组越界）等。</p>
<p>非运行异常又称为可检测异常。Java编译器利用分析方法或构造方法中可能产生的结果来检测Java程序中是否含有检测异常的处理程序，对于每个可能的可检测异常，方法或构造方法的throws子句必须列出该异常对应的类。如：java.lang java.util 、 <a href="http://gdzios.eward.win">http://java.net中定义的异常都是非运行异常。</a></p>
<p>我整理了一下，常见的Java Exception异常</p>
<ol>
<li><p>java.lang.ArithmeticException：算术条件异常。譬如：整数除零等。 </p>
</li>
<li><p>java.lang.ArrayIndexOutOfBoundsException：数组索引越界异常。当对数组的索引值为负数或大于等于数组大小时抛出。</p>
</li>
<li><p>java.lang.ArrayStoreException：数组存储异常。当向数组中存放非数组声明类型对象时抛出。</p>
</li>
<li><p>java.lang.ClassCastException：类造型异常。假设有类A和B（A不是B的父类或子类），O是A的实例，那么当强制将O构造为类B的实例时抛出该异常。该异常经常被称为强制类型转换异常。</p>
</li>
<li><p>java.lang.ClassNotFoundException：找不到类异常。当应用试图根据字符串形式的类名构造类，而在遍历CLASSPAH之后找不到对应名称的class文件时，抛出该异常。</p>
</li>
<li><p>java.lang.CloneNotSupportedException：不支持克隆异常。当没有实现Cloneable接口或者不支持克隆方法时,调用其clone方法则抛出该异常。</p>
</li>
<li><p>java.lang.EnumConstantNotPresentException：枚举常量不存在异常。当应用试图通过名称和枚举类型访问一个枚举对象，但该枚举对象并不包含常量时，抛出该异常。</p>
</li>
<li><p>java.lang.Exception：根异常。用以描述应用程序希望捕获的情况。</p>
</li>
<li><p>java.lang.IllegalAccessException：违法的访问异常。当应用试图通过反射方式创建某个类的实例、访问该类属性、调用该类方法，而当时又无法访问类的、属性的、方法的或构造方法的定义时抛出该异常。</p>
</li>
<li><p>java.lang.IllegalMonitorStateException：违法的监控状态异常。当某个线程试图等待一个自己并不拥有的对象（O）的监控器或者通知其他线程等待该对象（O）的监控器时，抛出该异常。</p>
</li>
<li><p>java.lang.IllegalStateException：违法的状态异常。当在Java环境和应用尚未处于某个方法的合法调用状态，而调用了该方法时，抛出该异常。</p>
</li>
<li><p>java.lang.IllegalThreadStateException：违法的线程状态异常。当县城尚未处于某个方法的合法调用状态，而调用了该方法时，抛出异常。</p>
</li>
<li><p>java.lang.IndexOutOfBoundsException：索引越界异常。当访问某个序列的索引值小于0或大于等于序列大小时，抛出该异常。</p>
</li>
<li><p>java.lang.InstantiationException：实例化异常。当试图通过newInstance方法创建某个类的实例，而该类是一个抽象类或接口时，抛出该异常。</p>
</li>
<li><p>java.lang.InterruptedException：被中止异常。当某个线程处于长时间的等待、休眠或其他暂停状态，而此时其他的线程通过Thread的interrupt方法终止该线程时抛出该异常。</p>
</li>
<li><p>java.lang.NegativeArraySizeException：数组大小为负值异常。当使用负数大小值创建数组时抛出该异常。</p>
</li>
<li><p>java.lang.NoSuchFieldException：属性不存在异常。当访问某个类的不存在的属性时抛出该异常。</p>
</li>
<li><p>java.lang.NoSuchMethodException：方法不存在异常。当访问某个类的不存在的方法时抛出该异常。</p>
</li>
<li><p>java.lang.NullPointerException：空指针异常。当应用试图在要求使用对象的地方使用了null时，抛出该异常。譬如：调用null对象的实例方法、访问null对象的属性、计算null对象的长度、使用throw语句抛出null等等。</p>
</li>
<li><p>java.lang.NumberFormatException：数字格式异常。当试图将一个String转换为指定的数字类型，而该字符串确不满足数字类型要求的格式时，抛出该异常。</p>
</li>
<li><p>java.lang.RuntimeException：运行时异常。是所有Java虚拟机正常操作期间可以被抛出的异常的父类。</p>
</li>
<li><p>java.lang.SecurityException：安全异常。由安全管理器抛出，用于指示违反安全情况的异常。</p>
</li>
<li><p>java.lang.StringIndexOutOfBoundsException：字符串索引越界异常。当使用索引值访问某个字符串中的字符，而该索引值小于0或大于等于序列大小时，抛出该异常。</p>
</li>
<li><p>java.lang.TypeNotPresentException：类型不存在异常。当应用试图以某个类型名称的字符串表达方式访问该类型，但是根据给定的名称又找不到该类型是抛出该异常。该异常与ClassNotFoundException的区别在于该异常是unchecked（不被检查）异常，而ClassNotFoundException是checked（被检查）异常。</p>
</li>
<li><p>java.lang.UnsupportedOperationException：不支持的方法异常。指明请求的方法不被支持情况的异常。</p>
</li>
</ol>
<h1 id="常见的Error类异常"><a href="#常见的Error类异常" class="headerlink" title="常见的Error类异常"></a>常见的Error类异常</h1><ol>
<li><p>java.lang.AbstractMethodError： 抽象方法错误。当应用试图调用抽象方法时抛出。</p>
</li>
<li><p>java.lang.AssertionError： 断言错。用来指示一个断言失败的情况。</p>
</li>
<li><p>java.lang.ClassCircularityError： 类循环依赖错误。在初始化一个类时，若检测到类之间循环依赖则抛出该异常。</p>
</li>
<li><p>java.lang.ClassFormatError： 类格式错误。当Java虚拟机试图从一个文件中读取Java类，而检测到该文件的内容不符合类的有效格式时抛出。</p>
</li>
<li><p>java.lang.Error： 错误。是所有错误的基类，用于标识严重的程序运行问题。这些问题通常描述一些不应被应用程序捕获的反常情况。</p>
</li>
<li><p>java.lang.ExceptionInInitializerError： 初始化程序错误。当执行一个类的静态初始化程序的过程中，发生了异常时抛出。静态初始化程序是指直接包含于类中的static语句段。</p>
</li>
<li><p>java.lang.IllegalAccessError： 违法访问错误。当一个应用试图访问、修改某个类的域（Field）或者调用其方法，但是又违反域或方法的可见性声明，则抛出该异常。</p>
</li>
<li><p>java.lang.IncompatibleClassChangeError： 不兼容的类变化错误。当正在执行的方法所依赖的类定义发生了不兼容的改变时，抛出该异常。一般在修改了应用中的某些类的声明定义而没有对整个应用重新编译而直接运行的情况下，容易引发该错误。</p>
</li>
<li><p>java.lang.InstantiationError： 实例化错误。当一个应用试图通过Java的new操作符构造一个抽象类或者接口时抛出该异常.</p>
</li>
<li><p>java.lang.InternalError： 内部错误。用于指示Java虚拟机发生了内部错误。</p>
</li>
<li><p>java.lang.LinkageError： 链接错误。该错误及其所有子类指示某个类依赖于另外一些类，在该类编译之后，被依赖的类改变了其类定义而没有重新编译所有的类，进而引发错误的情况。</p>
</li>
<li><p>java.lang.NoClassDefFoundError： 未找到类定义错误。当Java虚拟机或者类装载器试图实例化某个类，而找不到该类的定义时抛出该错误。</p>
</li>
<li><p>java.lang.NoSuchFieldError： 域不存在错误。当应用试图访问或者修改某类的某个域，而该类的定义中没有该域的定义时抛出该错误。</p>
</li>
<li><p>java.lang.NoSuchMethodError ：方法不存在错误。当应用试图调用某类的某个方法，而该类的定义中没有该方法的定义时抛出该错误。</p>
</li>
<li><p>java.lang.OutOfMemoryError： 内存不足错误。当可用内存不足以让Java虚拟机分配给一个对象时抛出该错误。</p>
</li>
<li><p>java.lang.StackOverflowError： 堆栈溢出错误。当一个应用递归调用的层次太深而导致堆栈溢出时抛出该错误。</p>
</li>
<li><p>java.lang.ThreadDeath： 线程结束。当调用Thread类的stop方法时抛出该错误，用于指示线程结束。</p>
</li>
<li><p>java.lang.UnknownError： 未知错误。用于指示Java虚拟机发生了未知严重错误的情况。</p>
</li>
<li><p>java.lang.UnsatisfiedLinkError： 未满足的链接错误。当Java虚拟机未找到某个类的声明为native方法的本机语言定义时抛出。</p>
</li>
<li><p>java.lang.UnsupportedClassVersionError： 不支持的类版本错误。当Java虚拟机试图从读取某个类文件，但是发现该文件的主、次版本号不被当前Java虚拟机支持的时候，抛出该错误。</p>
</li>
<li><p>java.lang.VerifyError： 验证错误。当验证器检测到某个类文件中存在内部不兼容或者安全问题时抛出该错误。</p>
</li>
<li><p>java.lang.VirtualMachineError： 虚拟机错误。用于指示虚拟机被破坏或者继续执行操作所需的资源不足的情况。</p>
</li>
<li><h1 id="最后面是几种不经常出现但是偶尔而会出现的Java异常"><a href="#最后面是几种不经常出现但是偶尔而会出现的Java异常" class="headerlink" title="最后面是几种不经常出现但是偶尔而会出现的Java异常"></a>最后面是几种不经常出现但是偶尔而会出现的Java异常</h1></li>
<li><p>javax.servlet.jsp.JspException: Cannot retrieve mapping for action /Login ：这个异常中就是系统没有找到匹配的action也就是 action没有在struts-config.xml中定义。也可能是打错了字符或者是某些不符合规则，可以使用strutsconsole工具来检查。</p>
</li>
<li><p>org.apache.jasper.JasperException: Cannot retrieve definition for form bean null： 这个异常是因为Struts根据struts-config.xml中的mapping没有找到action期望的form bean。action和form都应该各自有一个name属性，并且要精确匹配（包括大小写）</p>
</li>
<li><p>javax.servlet.jsp.JspException: No getter method for property username of bean org.apache.struts.taglib.html.BEAN：这个异常是 没有位form bean中的某个变量定义getter方法， 这个错误主要发生在表单提交的FormBean中，用struts标记<html:text property="”username”">时，在FormBean中必须有一个getUsername方法。注意字母“U”。（大写）</html:text></p>
</li>
<li><p>java.lang.NoClassDefFoundError: org/apache/struts/action/ActionForm： 这个异常是因为classpath中找不到相应的Java .class文件。如果这个错误发生在web应用程序的运行时，主要是因为指定的class文件不在web server的classpath中（/WEB-INF/classes和 /WEB-INF/lib）。在上面的错误中，原因是应该找不到ActionForm类。</p>
</li>
<li><p>javax.servlet.jsp.JspException: Cannot find ActionMappings or ActionFormBeans collection： 不是标识Struts actionServlet的<servlet>标记就是映射.do扩展名的<sevlet-mapping>标记或者两者都没有在web.xml中声明。</sevlet-mapping></servlet></p>
</li>
<li><p>在struts-config.xml中的打字或者拼写错误也可导致这个异常的发生。例如缺少一个标记的关闭符号/&gt;。最好使用struts console工具检查一下。</p>
</li>
<li><p>另外，load-on-startup必须在web.xml中声明，这要么是一个空标记，要么指定一个数值，这个数值用来表servlet运行的优先级，数值越大优先级越低。</p>
</li>
<li><p>还有一个和使用load-on-startup有关的是使用Struts预编译JSP文件时也可能导致这个异常。</p>
</li>
<li><p>java.lang.NullPointerException at org.apache.struts.util.RequestUtils.forwardURL(RequestUtils.java:1223)：这个异常就是 在struts-config.xml中的forward元素缺少path属性。例如应该是如下形式： <forward name="userhome" path="/user/userhome.jsp"></forward></p>
</li>
<li><p>javax.servlet.jsp.JspException: Cannot find bean org.apache.struts.taglib.html.BEAN in any scope Probable Causes： 试图在Struts的form标记外使用form的子元素。这常常发生在你在后面使用Struts的html标记。另外要注意可能你不经意使用的无主体的标记。</p>
</li>
<li><p>javax.servlet.jsp.JspException: Missing message for key xx.xx.xx Probable Causes 这个key的值对没有在资源文件ApplicationResources.properties中定义。 资源文件ApplicationResources.properties到 WEB-INF/classes目录下就可以了</p>
</li>
<li><p>Cannot find message resources under key org.apache.struts.action.MESSAGE： 很显然，这个错误是发生在使用资源文件时，而Struts没有找到资源文件。</p>
</li>
<li><p>Strange and seemingly random characters in HTML and on screen, but not in original JSP or servlet.： 混和使用Struts的html:form标记和标准的HTML标记不正确。 使用的编码样式在本页中不支持。</p>
</li>
<li><p>“Document contained no data” in Netscape No data rendered (completely empty) page in Microsoft Internet Explorer： 使用一个Action的派生类而没有实现perform方法或execute方法。</p>
</li>
<li><p>ServletException: BeanUtils.populate： 在用Struts上传文件时,遇到了javax.servlet.ServletException: BeanUtils.populate异常。 我的ActionServlet并没有用到BeanUtils这些工具类。后来仔细检查代码发现是在jsp文件里的form忘了加enctype=”multipart/form-data”了。所以写程序遇到错误或异常应该从多方面考虑问题存在的可能性，想到系统提示信息以外的东西。</p>
</li>
</ol>
<p>1.定义Action后,如果指定了name,那么必须要定义一个与它同名的FormBean才能进行form映射.</p>
<p>2.如果定义Action后,提交页面时出现 “No input attribute for mapping path…”错误,则需要在其input属性中定义转向的页面.</p>
<p>3.如果插入新的数据时出现 “Batch update row count wrong:…”错误,则说明XXX.hbm.xml中指定的key的类型为原始类型(int, long),因为这种类型会自动分配值,而这个值往往会让系统认为已经存在该记录,正确的方法是使用java.lang.Integer或java.lang.Long对象.</p>
<p>4.如果插入数据时出现 “argument type mismatch”错误,可能是你使用了Date等特殊对象,因为struts不能自动从String型转换成Date型,所以,你需要在Action中手动把String型转换成Date型.</p>
<p>5.Hibernate中, Query的iterator比list方法快很多.</p>
<p>6.如果出现 “equal symbol expected”错误,说明你的strtus标签中包含另一个标签或者变量,例如: <html:select property="test" mock="<%=test%>"> 或者 <html:hidden property="test" value="<bean:write name=" t"="">"/> 这样的情况…</html:hidden></html:select></p>
<p>留着抱佛脚用</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h1&gt;&lt;p&gt;這篇文章主要介绍了java平时常见的一些异常报错信息，我以文档的形式记录下来，用来复习巩固及其面试用，平时早上地铁公交拿出手机可以看一下。&lt;/p&gt;
&lt;h1 id=&quot;异常类基本就那两种类型：&quot;&gt;&lt;a href=&quot;#异常类基本就那两种类型：&quot; class=&quot;headerlink&quot; title=&quot;异常类基本就那两种类型：&quot;&gt;&lt;/a&gt;异常类基本就那两种类型：&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/40LnvRk.jpg&quot; alt=&quot;Java异常类结构图&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="java" scheme="http://gdzios.eward.win/categories/java/"/>
    
      <category term="java异常" scheme="http://gdzios.eward.win/categories/java/java%E5%BC%82%E5%B8%B8/"/>
    
    
      <category term="java异常" scheme="http://gdzios.eward.win/tags/java%E5%BC%82%E5%B8%B8/"/>
    
      <category term="异常处理" scheme="http://gdzios.eward.win/tags/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    
      <category term="异常信息" scheme="http://gdzios.eward.win/tags/%E5%BC%82%E5%B8%B8%E4%BF%A1%E6%81%AF/"/>
    
      <category term="java学习" scheme="http://gdzios.eward.win/tags/java%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="java面试" scheme="http://gdzios.eward.win/tags/java%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>为Hexo添加文章置顶功能</title>
    <link href="http://gdzios.eward.win/2017/06/02/site2/"/>
    <id>http://gdzios.eward.win/2017/06/02/site2/</id>
    <published>2017-06-02T05:21:30.000Z</published>
    <updated>2017-06-08T10:11:54.955Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>主题竟然没有提供置顶功能….对于我这种强迫症来说，必须得弄上啊，度娘了一些资料，总算能实现其功能了，（只管实现功能哦）<br>其实就是增加一个<code>top</code>值，在<code>hexo</code>生成<code>html</code>时，将<code>top</code>值越高的排在前面就可以了，看我现在的博客就是；其实通过改时间也是可以的。</p>
<a id="more"></a>
<h1 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h1><p>修改站点文件夹下<code>node_modules/hexo-generator-index/lib/generator.js</code>，在生成文章之前进行文章top值排序。</p>
<pre><code>pst xxx
scasca
sdacajjfj
</code></pre><p>增加代码</p>
<pre><code>posts.data = posts.data.sort(function(a, b) {
    if(a.top &amp;&amp; b.top) { // 两篇文章top都有定义
    if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排
    else return b.top - a.top; // 否则按照top值降序排
}
else if(a.top &amp;&amp; !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）
    return -1;
}
else if(!a.top &amp;&amp; b.top) {
    return 1;
}
else return b.date - a.date; // 都没定义按照文章日期降序排
});
</code></pre><p><strong>完整文件代码</strong></p>
<pre><code>`&apos;use strict&apos;;
var pagination = require(&apos;hexo-pagination&apos;);
module.exports = function(locals){
  var config = this.config;
  var posts = locals.posts;
    posts.data = posts.data.sort(function(a, b) {
        if(a.top &amp;&amp; b.top) { // 两篇文章top都有定义
            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排
            else return b.top - a.top; // 否则按照top值降序排
        }
        else if(a.top &amp;&amp; !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）
            return -1;
        }
        else if(!a.top &amp;&amp; b.top) {
            return 1;
        }
        else return b.date - a.date; // 都没定义按照文章日期降序排
    });
  var paginationDir = config.pagination_dir || &apos;page&apos;;
  return pagination(&apos;&apos;, posts, {
    perPage: config.index_generator.per_page,
    layout: [&apos;index&apos;, &apos;archive&apos;],
    format: paginationDir + &apos;/%d/&apos;,
    data: {
      __index: true
    }
  });
};


&apos;use strict&apos;;

var pagination = require(&apos;hexo-pagination&apos;);

module.exports = function(locals) {
  var config = this.config;
  var posts = locals.posts.sort(config.index_generator.order_by);
  var paginationDir = config.pagination_dir || &apos;page&apos;;

  return pagination(&apos;&apos;, posts, {
    perPage: config.index_generator.per_page,
    layout: [&apos;index&apos;, &apos;archive&apos;],
    format: paginationDir + &apos;/%d/&apos;,
    data: {
      __index: true
    }
  });
};`
</code></pre><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>在文章中，增加top值定义，值越大，文章排序越靠前。top值默认为0，若不设置top，则不参与排序。示例：</p>
<pre><code>title: 为Hexo添加文章置顶功能（三）
categories: hexo
tags: [文章置顶，一碗汤不热]
top: 1
date: 201-06-01 11:44:40

## 标题

正文
</code></pre><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>這样修改是没有置顶那个标志的 但是能达到置顶功能就好了，哈哈。</p>
<p>网站备份的时候，记得备份好文件node_modules/hexo-generator-index/lib/generator.js，因为这个文件既不是站点文件，也不是主题文件，而文件夹默认不参与git版本控制，所以迁移博客文件时很容易忽略。让我又想放弃hexo了（逃）</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;主题竟然没有提供置顶功能….对于我这种强迫症来说，必须得弄上啊，度娘了一些资料，总算能实现其功能了，（只管实现功能哦）&lt;br&gt;其实就是增加一个&lt;code&gt;top&lt;/code&gt;值，在&lt;code&gt;hexo&lt;/code&gt;生成&lt;code&gt;html&lt;/code&gt;时，将&lt;code&gt;top&lt;/code&gt;值越高的排在前面就可以了，看我现在的博客就是；其实通过改时间也是可以的。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://gdzios.eward.win/categories/Hexo/"/>
    
    
      <category term="博客" scheme="http://gdzios.eward.win/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="文章置顶" scheme="http://gdzios.eward.win/tags/%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6/"/>
    
  </entry>
  
  <entry>
    <title>MarkdownPad免费激活注册</title>
    <link href="http://gdzios.eward.win/2017/05/16/writ/"/>
    <id>http://gdzios.eward.win/2017/05/16/writ/</id>
    <published>2017-05-16T11:01:37.000Z</published>
    <updated>2017-06-05T03:53:13.631Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><strong>MarkdownPad 是 Windows 平台上一个功能完善的 Markdown 编辑器。应该说是最好用的了。但是免费版有一些限制，还好终于找到了可用的专业版激活码，免费共享给大家。</strong></p>
<p><img src="http://i2.muimg.com/588926/97ddd2c3b014f81c.png" alt="公众号gdz_hz"></p>
<a id="more"></a>
<p><strong>专为 Markdown 打造</strong></p>
<p>提供了语法高亮和方便的快捷键功能，给您最好的 Markdown 编写体验。</p>
<p>来试一下：</p>
<p><strong>粗体 </strong>(Ctrl+B) and <em>斜体</em> (Ctrl+I)<br>引用 (Ctrl+Q)<br>代码块 (Ctrl+K)<br>标题 1, 2, 3 (Ctrl+1, Ctrl+2, Ctrl+3)<br>列表 (Ctrl+U and Ctrl+Shift+O)<br>实时预览，所见即所得</p>
<p>无需猜测您的语法是否正确；每当您敲击键盘，实时预览功能都会立刻准确呈现出文档的显示效果。</p>
<p>为高级用户而设计的稳定的 Markdown 编辑器</p>
<p>MarkdownPad 支持多种 Markdown 解析引擎，包括 标准 Markdown 、 Markdown 扩展 (包括表格支持) 以及 GitHub 风格 Markdown 。</p>
<p>有了标签式多文档界面、PDF 导出、内置的图片上传工具、会话管理、拼写检查、自动保存、语法高亮以及内置的 CSS 管理器，您可以随心所欲地使用 MarkdownPad。</p>
<h1 id="激活信息"><a href="#激活信息" class="headerlink" title="激活信息"></a>激活信息</h1><p>邮箱地址：</p>
<pre><code>Soar360@live.com
</code></pre><p>授权秘钥：</p>
<pre><code>GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==
</code></pre><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>不知道为何，MarkdownPad 2 的注册私钥泄密了，按照这个逻辑，是可以做成一个注册机的。附送私钥如下。</p>
<pre><code> -----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: DES-EDE3-CBC,CCE015B0820B9A3F
4BiGKVEzt+cLBdilEZR+8Y0YHrarjNX4bT5XbQ5BgTcJwMYnARCKib+BgwX9wPUB
3D7PUwt4m4OGemXXcC4ELUFyMqHIT6SILFSdTTIvnQbsWutx44zyJK9SlP/2uhG8
JIUDdLWVv5kS8J/UcInC5bomKZ5SX3+0ziRpLWkgXoHJ5gjQ+fDNzAKLcNn7Bubq
znjoSH8XuGnORp7d4FiRT5Vl9WpnBqyyFSkYwzDOK//iFgHyhYZ5BCInfQMX66Cj
wk3Pax/ujSDzYalkkJe8o8VAcEisMoYhSTS9BnRpROn6V4UyAugWMPnEOgiBmO42
HwLoqK7WXCe+wS1UiDnECU2wIU5Z8qL5oKEKFGukakK+mYXh8MHTkYq2ZQZBo8Vy
venhBaolrViCWdkJ5MsuqarBJjyCeAS38GAJURxsKnd+Bp7gGAlNI/0OWIcrjIi4
4o/0CaYRHR+PdeuJup5rUKPgGfMW0iOwmMncSM19hIiaU4/hHGYeXrL1aKfZX4ML
YxWJ/i6u8U3gcJo/bOvjirxUZOLTfv3n5aDTcxU70ejgmmYLBaxKt32Ib9oLwnL8
AUnWNRPZaNJ/X853ybsGu73vA/6HPw63g0EaNharg21Q1IhuggMvHJiN6Z9d4KGg
Vio6++15SVcsyQEGZx+jjv95IEfgwUQXBmkNRZ/KJQQLkKuOuXuvakI5sWdNJLRo
xY9W2lHMnY/Yi82V4P5odxFZOmAYK5DHCQ47gw9IzqGjCyxATAYgkoZR+PCP5y9n
IZ8oRYbNpykXVvQC0JALgixIZaAjj30wXb1CcD3layQNkrp0O4qVzuqyT7e2aKEq
XNeoB0uDNvn10L60QAOG5630uIIFRyXphZgrzScp97ABq7STQ7t4zTZhbmiwnPHq
8xft+mO2rW3puYEHoEkQKwJcPUTpR/s67IIXQMs1y93WpJoOw7doumyNtAoR8EfK
m/H4UoJhoiXL755n4CGnET+LEtuFO/0UwdWxj+u503ovWL021DAnKhrGPMpo73ga
aL/OBSFSFyxY92qGqfMWNQOaoK5hCRhzp/8Pd+B1tjhnxUNOl1ulytmhJBigU5nV
arkgJYmG+Ox15f1YWxmD1EhLOQLUgBruG04cjRnG4LXV+UBKRdcS3bECArFutlTw
6ogbi8cbDJNBbGpnlfIbEgGEe423rCTuoLJcIZfIDvPDsMobd9lCgn2o95N3Ey4U
+UT1PEDEhXW0nggdvZGy8y4T0ZIJ6Tn4asWHTsqH1fQYEz3H51pMehfCbxbc6Bbh
nuNyrjv0NSNJvOAn71tFPRf6vgO83h5EFS0ov5ASbWchuf7BFpebmOO04aVMXPBe
3nfE1L5in5ApK7AyhfdSPpELCxBUQ0av4k/0yw/P2TRllybgjdoXjlsJqBn7rkqr
4u1H7pytlEWt0mSgZenlGXrOOEaknUe40z9BHNxliA7ET1MQk6veFVfbSFjeVUDk
fsFAVE88/KHyMMfGwwcuLdnQnOBHNJ8iJjJF+RZy93QzveZB22+m5cl9SNXIMcEA
mOm4Q8CaLwwzZmF9NKV2CjlmUTqOszJv5abS5YdrPavAR6QxGjZfya3nA2ASd6HN
-----END RSA PRIVATE KEY-----
</code></pre><p><a href="https://w3cboy.com/post/2014/10/MarkdownPad%E6%B3%A8%E5%86%8C%E7%A0%81/" target="_blank" rel="external">原文地址</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;MarkdownPad 是 Windows 平台上一个功能完善的 Markdown 编辑器。应该说是最好用的了。但是免费版有一些限制，还好终于找到了可用的专业版激活码，免费共享给大家。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i2.muimg.com/588926/97ddd2c3b014f81c.png&quot; alt=&quot;公众号gdz_hz&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="http://gdzios.eward.win/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="MarkdownPad" scheme="http://gdzios.eward.win/tags/MarkdownPad/"/>
    
      <category term="MarkdownPad注册码" scheme="http://gdzios.eward.win/tags/MarkdownPad%E6%B3%A8%E5%86%8C%E7%A0%81/"/>
    
      <category term="文本编辑工具" scheme="http://gdzios.eward.win/tags/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序开发之转发功能</title>
    <link href="http://gdzios.eward.win/2017/05/16/site/"/>
    <id>http://gdzios.eward.win/2017/05/16/site/</id>
    <published>2017-05-16T10:28:08.000Z</published>
    <updated>2017-06-05T03:54:04.512Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前无聊的时间调试了一个微信小程序。<br>利用一个美女图片的api做的一个微信美女图片浏览的小程序，之前也没有做过,后面上线了发现没有转发分享功能，这点感觉很不爽啊，怎么能没有转发这种高逼格的功能呢？</p>
<p>赶紧打开微信开发工具</p>
<p>首先参考了一下:<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/api/share.html?t=20161221" target="_blank" rel="external">官方文档</a><br><img src="http://i.imgur.com/o5Hztx5.png" alt="分享图片"></p>
<a id="more"></a>
<h1 id="关键"><a href="#关键" class="headerlink" title="关键"></a>关键</h1><p>然后添加转发的显示按钮</p>
<p><code>wx.showShareMenu({
withShareTicket: true
})</code></p>
<p>这里有很多朋友不知道“path”路径该怎么填，其实就是填当前页面的路径比如我的：<br><img src="http://i.imgur.com/Vtzp2Kk.png" alt="公众号gdz_hz"><br>页面的路径加id,这个id就是小程序的场景值：<br><img src="http://i2.muimg.com/588926/675477204471cd0b.png" alt="公众号gdz_hz"><br>这个path路径填正确了，转发后朋友们才能点金进入小程序<br>完成后，点击右上角有转发功能<br><img src="http://i4.buimg.com/588926/38ee7a2359c59c0d.png" alt=""></p>
<p>真机测试也能进去就OK了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;之前无聊的时间调试了一个微信小程序。&lt;br&gt;利用一个美女图片的api做的一个微信美女图片浏览的小程序，之前也没有做过,后面上线了发现没有转发分享功能，这点感觉很不爽啊，怎么能没有转发这种高逼格的功能呢？&lt;/p&gt;
&lt;p&gt;赶紧打开微信开发工具&lt;/p&gt;
&lt;p&gt;首先参考了一下:&lt;a href=&quot;https://mp.weixin.qq.com/debug/wxadoc/dev/api/share.html?t=20161221&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/o5Hztx5.png&quot; alt=&quot;分享图片&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="微信小程序" scheme="http://gdzios.eward.win/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信小程序" scheme="http://gdzios.eward.win/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="转发功能" scheme="http://gdzios.eward.win/tags/%E8%BD%AC%E5%8F%91%E5%8A%9F%E8%83%BD/"/>
    
      <category term="小程序开发" scheme="http://gdzios.eward.win/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
</feed>

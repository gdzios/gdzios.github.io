<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[site9]]></title>
    <url>%2F2017%2F07%2F07%2Fsite9%2F</url>
    <content type="text"><![CDATA[苹果免越狱、安卓一键转发朋友圈小视频软件安卓苹果ios微信朋友圈一键转发,营销助手,微友,微商达人,安卓精灵,微商管家7.0,水晶至尊,一键转发小视频软件工具神器苹果微信多开，自动抢红包，修改微信步数，自动抢群红包，延迟抢红包，群聊过滤，消息防撤回，密友聊天，抢到红包随机回复感谢语，自动收账，收帐回复，修改位置信息，更好听的微信消息提示音 下载地址永久更新地址]]></content>
      <categories>
        <category>微信工具</category>
      </categories>
      <tags>
        <tag>微信多开</tag>
        <tag>自动抢红包</tag>
        <tag>微信辅助</tag>
        <tag>安卓苹果ios微信朋友圈一键转发</tag>
        <tag>营销助手</tag>
        <tag>微友</tag>
        <tag>微商达人</tag>
        <tag>安卓精灵</tag>
        <tag>微商管家7.0</tag>
        <tag>水晶至尊</tag>
        <tag>一键转发小视频软件工具神器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阶段性项目开发总结]]></title>
    <url>%2F2017%2F06%2F28%2Fsite8%2F</url>
    <content type="text"><![CDATA[阶段性项目开发总结這次的购物网站项目在开发中，遇到了一些不乐观的问题 這次使用的是mysql 数据库这块还得自己下功夫去学习。 深深体会到，数据库這块的重要性，前期数据库没有设计好，后面开发过程中竟是遇到问题，有些需要实现的功能都不能去实现，另外修改则需要更改很多的代码。 我才不会去改，，， 中间也遇到了一些异常信息比如這个异常信息，神经兮兮的，到现在也没有搞清楚错误的地方，但是这Excption并不影响程序的运行，还好还好。坚持一下还是能完成答辩哈哈哈哈。 最终效果 只实现了一些基本的功能，还有很多功能没有去实现，这周末有时间再捣鼓一下 先就到這里吧 ，想好了再补充]]></content>
      <categories>
        <category>个人记录</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JSP Standard Tag Library]]></title>
    <url>%2F2017%2F06%2F23%2Fsite7%2F</url>
    <content type="text"><![CDATA[Jstl介绍什么是Jstl？Jstl全称：Java Servlet Standard Tag Library,即JSP标准标签库，它包含了我们在开发jsp页面时经常用到的一组标准标签库，这些标签为我们提供了一种不用嵌入java代码，就可以开发复杂的jsp页面的途径。 Jstl通常会与EL表达式合作实现JSP页面的编号。 Jstl环境搭建 导入jar包 2.引用核心标签库 &lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot;%&gt; 一般情况下，用MyEclipse都会默认导入jar包的，手动下载地址 Jstl标准标签库核心标签库 按照功能的不同又分为： 通用标签库：set out remove 条件标签库：if choose 迭代标签库：forEach 通用标签库：用于在jsp页面内设置，删除和显示变量， set：设置置顶范围的变量值，其语法格式分为两种：将value值存储到范围为scope的变量variable中 &lt;c:set var=&quot;variable&quot; value=&quot;&quot; scope=&quot;scope&quot;/&gt; 将value值存储到target对象的属性中 &lt;s:set target=&quot;target&quot; property=&quot;property&quot; value=&quot;&quot;/&gt; out:计算表达式并将结果输出显示：不指定默认值 &lt;c:out value=&quot;&quot; &gt; 指定默认值 &lt;c:out value=&quot;&quot; default=&quot;default&quot; /&gt; remove: 删除指定范围内的变量 &lt;c:remove var=&quot;value&quot; scope=&quot;scope&quot;/&gt; 条件标签库if ：功能和java语言中的完全相同， &lt;c:if test=&quot;condition&quot; var=&quot;varName&quot; scope=&quot;scope&quot;/&gt; test指条件 后面通常不写的：var存储判断后的结果，scope指定范围。 choose：实现java语言中 if---else if---else &lt;c:choose var = &quot;varName&quot; scope=&quot;scope&quot;&gt; &lt;c:when test=&quot;condition&quot;&gt; 主体内容 &lt;/c:when&gt; &lt;c:other wise&gt; 主体内容 &lt;/c:otherwise&gt; &lt;/c:choose&gt; 迭代标签库两种语法：遍历集合，语句循环执行指定次数 遍历集合对象的成员&lt;c:forEach var =&quot;varName&quot; items=&quot;collectionName&quot; varStatus=&quot;varStatusName&quot; begin=&quot;beginIndex&quot; end=&quot;endIndex&quot; step=&quot;step&quot;&gt; &lt;/c:forEach&gt; 指定语句的执行次数&lt;c:forEach var =&quot;varName&quot; varStatus=&quot;varStatusName&quot; begin =&quot;beginIndex&quot; end = &quot;endIndex&quot; step=&quot;step&quot; &lt;/c:forEach&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>JSP</tag>
        <tag>JSP标签</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[EL表达式]]></title>
    <url>%2F2017%2F06%2F19%2Fsite6%2F</url>
    <content type="text"><![CDATA[EL语法结构${EL表达式} EL功能：替代jsp页面中的复杂代码 EL特点： 自动转换类型 使用简单 使用变量名获取值：${变量名} page---${pageScope.usename},找不到返回 null request---${requestScope.usename},找不到返回 null session---${sessionScope.usename},找不到返回 null application---${applicationScope.usename},找不到返回 null 不指定范围也可以，他会自动依次在四大作用域去寻找，没有返回null；效率低，容易受同名变量干扰。 获取对象属性：点操作符${user.username} [ ]操作符${user[&quot;username&quot;]} 区别： 当属性名中包含特殊字符，例如·或-等情况下，不用点操作符来访问，這时只能用[ ]操作符； 访问数组，链表等 获取集合：&lt;body&gt; &lt;% List names = new ArrayList(); names.add(0, &quot;tom&quot;); names.add(1, &quot;lusi&quot;); request.setAttribute(&quot;names&quot;, names); %&gt; 姓名： ${names[0] }&lt;br&gt; 姓名： ${names[1] } &lt;% Map name = new HashMap(); name.put(&quot;one&quot;, &quot;wangba&quot;); name.put(&quot;two&quot;, &quot;huahua&quot;); request.setAttribute(&quot;name&quot;, name); %&gt; &lt;br&gt; 姓名： ${name.one }&lt;br&gt; 姓名： ${name[&quot;two&quot;] } &lt;/body&gt; 关系操作符EL表达式支持大部分Java所提供的算术和逻辑操作符： == eq ${8==5} ${8eq5} ---&gt; false != ne ${8!=5} ${8eq5} ---&gt; true &lt; lt ${8&lt;5} ${8eq5} ---&gt; false &gt; gt ${8&gt;5} ${8eq5} ---&gt; true &lt;= le &gt;= ge / or div 除 % or mod 取模 &amp;&amp; or and 测试逻辑与 || or or 测试逻辑或 ! or not 测试取反 empty 测试是否为空 EL隐式对象：作用域访问对象： pageScope requestScope sessionScope applicationScope]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>EL表达式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于Next主题美化教程(关注微信gdz_hz获取密钥)]]></title>
    <url>%2F2017%2F06%2F08%2Fsite5%2F</url>
    <content type="text"><![CDATA[前言 看到有些博客网站很炫酷，那么是怎么配置的呢？接下来我会讲一讲如何实现一些炫酷的效果 主要有以下28种（后续继续增加）： 在右上角或者左上角实现fork me on github 为Hexo Next主题添加哈林摇特效 添加动态背景 实现点击出现桃心效果 修改文章内链接文本样式 修改文章底部的那个带#号的标签 在每篇文章末尾统一添加“本文结束”标记 修改作者头像并旋转 博文压缩 修改``代码块自定义样式 侧边栏社交小图标设置 主页文章添加阴影效果 在网站底部加上访问量 添加热度 网站底部字数统计 添加 README.md 文件 设置网站的图标Favicon 实现统计功能 添加顶部加载条 添加网易云跟帖 隐藏网页底部powered By Hexo / 强力驱动 修改网页底部的桃心 文章加密访问 添加jiathis分享 博文置顶 修改字体大小 修改打赏字体不闪动 侧边栏推荐阅读 在右上角或者左上角实现fork me on github实现效果图 具体实现方法点击我进去挑选自己喜欢的样式，并复制代码。 例如，我是复制如下代码： 然后粘贴刚才复制的代码到themes/next/layout/_layout.swig文件中(放在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;的下面)，并把href改为你的github地址 为Hexo Next主题添加哈林摇特效实现效果图点击下面图片看视频效果 具体实现方法创建特效文件在主题目录中，创建layout\_macro\high.swig，添加如下代码： &lt;a title=&quot;收藏到书签，偶尔High一下^_^&quot; rel=&quot;alternate&quot; class=&quot;mw-harlem_shake_slow wobble shake&quot; href=&apos;javascript:(function() { function c() { var e = document.createElement(&quot;link&quot;); e.setAttribute(&quot;type&quot;, &quot;text/css&quot;); e.setAttribute(&quot;rel&quot;, &quot;stylesheet&quot;); e.setAttribute(&quot;href&quot;, f); e.setAttribute(&quot;class&quot;, l); document.body.appendChild(e) } function h() { var e = document.getElementsByClassName(l); for (var t = 0; t &lt; e.length; t++) { document.body.removeChild(e[t]) } } function p() { var e = document.createElement(&quot;div&quot;); e.setAttribute(&quot;class&quot;, a); document.body.appendChild(e); setTimeout(function() { document.body.removeChild(e) }, 100) } function d(e) { return { height : e.offsetHeight, width : e.offsetWidth } } function v(i) { var s = d(i); return s.height &gt; e &amp;&amp; s.height &lt; n &amp;&amp; s.width &gt; t &amp;&amp; s.width &lt; r } function m(e) { var t = e; var n = 0; while (!!t) { n += t.offsetTop; t = t.offsetParent } return n } function g() { var e = document.documentElement; if (!!window.innerWidth) { return window.innerHeight } else if (e &amp;&amp; !isNaN(e.clientHeight)) { return e.clientHeight } return 0 } function y() { if (window.pageYOffset) { return window.pageYOffset } return Math.max(document.documentElement.scrollTop, document.body.scrollTop) } function E(e) { var t = m(e); return t &gt;= w &amp;&amp; t &lt;= b + w } function S() { var e = document.createElement(&quot;audio&quot;); e.setAttribute(&quot;class&quot;, l); e.src = i; e.loop = false; e.addEventListener(&quot;canplay&quot;, function() { setTimeout(function() { x(k) }, 500); setTimeout(function() { N(); p(); for (var e = 0; e &lt; O.length; e++) { T(O[e]) } }, 15500) }, true); e.addEventListener(&quot;ended&quot;, function() { N(); h() }, true); e.innerHTML = &quot; &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;&quot;; document.body.appendChild(e); e.play() } function x(e) { e.className += &quot; &quot; + s + &quot; &quot; + o } function T(e) { e.className += &quot; &quot; + s + &quot; &quot; + u[Math.floor(Math.random() * u.length)] } function N() { var e = document.getElementsByClassName(s); var t = new RegExp(&quot;\\b&quot; + s + &quot;\\b&quot;); for (var n = 0; n &lt; e.length; ) { e[n].className = e[n].className.replace(t, &quot;&quot;) } } var e = 30; var t = 30; var n = 350; var r = 350; var i = &quot;//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake.mp3&quot;; var s = &quot;mw-harlem_shake_me&quot;; var o = &quot;im_first&quot;; var u = [&quot;im_drunk&quot;, &quot;im_baked&quot;, &quot;im_trippin&quot;, &quot;im_blown&quot;]; var a = &quot;mw-strobe_light&quot;; var f = &quot;//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css&quot;; var l = &quot;mw_added_css&quot;; var b = g(); var w = y(); var C = document.getElementsByTagName(&quot;*&quot;); var k = null; for (var L = 0; L &lt; C.length; L++) { var A = C[L]; if (v(A)) { if (E(A)) { k = A; break } } } if (A === null) { console.warn(&quot;Could not find a node of the right size. Please try a different page.&quot;); return } c(); S(); var O = []; for (var L = 0; L &lt; C.length; L++) { var A = C[L]; if (v(A)) { O.push(A) } } })()&apos;&gt;&lt;i class=&quot;fa fa-music&quot;&gt;&lt;/i&gt; High&lt;/a&gt; 引用特效代码在侧边栏，引用特效代码。在主题目录，修改layout\_macro\sidebar.swig： {% include 'high.swig' %} 样式修改（这里，我使用的是其它Pisces主题，其它主题请自行按照此法调试）将”High”和”RSS”并排展示，在主题目录中，修改source\css\_schemes\Pisces\_sidebar.styl display: inline-block; 最后关于优化，建议将layout\_macro\high.swig中的harlem-shake.mp3和harlem-shake.css放到cdn上，然后引用cdn地址，加快访问速度。 添加动态背景实现效果图 具体实现方法 咱们直接搬出文档吧，点我 实现点击出现桃心效果实现效果图 具体实现方法在浏览器输入如下网址： http://7u2ss1.com1.z0.glb.clouddn.com/love.js 然后将里面的代码copy一下，新建love.js文件并且将代码复制进去，然后保存。将love.js文件放到路径/themes/next/source/js/src里面，然后打开\themes\next\layout\_layout.swig文件,在末尾（在前面引用会出现找不到的bug）添加以下代码： &lt;!-- 页面点击小红心 --&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;script&gt; 修改文章内链接文本样式实现效果图 具体实现方法修改文件 themes\next\source\css\_common\components\post\post.styl，在末尾添加如下css样式，： // 文章内链接文本样式 .post-body p a{ color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover { color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; } } 其中选择.post-body 是为了不影响标题，选择p是为了不影响首页“阅读全文”的显示样式,颜色可以自己定义。 修改文章底部的那个带#号的标签实现效果图 具体实现方法 修改模板/themes/next/layout/_macro/post.swig，搜索 rel=&quot;tag&quot;&gt;#，将# 换成&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 在每篇文章末尾统一添加“本文结束”标记实现效果图 具体实现方法 在路径 \themes\next\layout\_macro 中新建 passage-end-tag.swig 文件,并添加以下内容： &lt;div&gt; {% if not is_index %} -------------本文结束感谢您的阅读------------- {% endif %} &lt;/div&gt; 接着打开\themes\next\layout\_macro\post.swig文件，在post-body 之后， post-footer 之前添加如下画红色部分代码（post-footer之前两个DIV）： 代码如下： &lt;div&gt; {% if not is_index %} {% include 'passage-end-tag.swig' %} {% endif %} &lt;/div&gt; 然后打开主题配置文件（_config.yml),在末尾添加： #文章末尾添加“本文结束”标记 passage_end_tag: enabled: true 完成以上设置之后，在每篇文章之后都会添加如上效果图的样子。 修改作者头像并旋转实现效果图 直接看我的博客吧，鼠标移动到头像 具体实现方法 打开\themes\next\source\css\_common\components\sidebar\sidebar-author.styl，在里面添加如下代码： .site-author-image { display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out; } img:hover { /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg); } /* Z 轴旋转动画 */ @-webkit-keyframes play { 0% { -webkit-transform: rotateZ(0deg); } 100% { -webkit-transform: rotateZ(-360deg); } } @-moz-keyframes play { 0% { -moz-transform: rotateZ(0deg); } 100% { -moz-transform: rotateZ(-360deg); } } @keyframes play { 0% { transform: rotateZ(0deg); } 100% { transform: rotateZ(-360deg); } } 博文压缩在站点的根目录下执行以下命令： $ npm install gulp -g $ npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save 在如下图所示，新建 gulpfile.js ，并填入以下内容： var gulp = require(&apos;gulp&apos;); var minifycss = require(&apos;gulp-minify-css&apos;); var uglify = require(&apos;gulp-uglify&apos;); var htmlmin = require(&apos;gulp-htmlmin&apos;); var htmlclean = require(&apos;gulp-htmlclean&apos;); // 压缩 public 目录 css gulp.task(&apos;minify-css&apos;, function() { return gulp.src(&apos;./public/**/*.css&apos;) .pipe(minifycss()) .pipe(gulp.dest(&apos;./public&apos;)); }); // 压缩 public 目录 html gulp.task(&apos;minify-html&apos;, function() { return gulp.src(&apos;./public/**/*.html&apos;) .pipe(htmlclean()) .pipe(htmlmin({ removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, })) .pipe(gulp.dest(&apos;./public&apos;)) }); // 压缩 public/js 目录 js gulp.task(&apos;minify-js&apos;, function() { return gulp.src(&apos;./public/**/*.js&apos;) .pipe(uglify()) .pipe(gulp.dest(&apos;./public&apos;)); }); // 执行 gulp 命令时执行的任务 gulp.task(&apos;default&apos;, [ &apos;minify-html&apos;,&apos;minify-css&apos;,&apos;minify-js&apos; ]); 生成博文是执行hexo g &amp;&amp; gulp就会根据 gulpfile.js 中的配置，对public目录中的静态资源文件进行压缩。 修改``代码块自定义样式实现效果图 具体实现方法 打开\themes\next\source\css\_custom\custom.styl,向里面加入：(颜色可以自己定义) // Custom styles. code { color: #ff7600; background: #fbf7f8; margin: 2px; } // 大代码块的自定义样式 .highlight, pre { margin: 5px 0; padding: 5px; border-radius: 3px; } .highlight, code, pre { border: 1px solid #d6d6d6; } 侧边栏社交小图标设置实现效果图 具体实现方法 打开主题配置文件_config.yml，搜索social_icons:,在图标库找自己喜欢的小图标，并将名字复制在如下位置，保存即可 主页文章添加阴影效果实现效果图 具体实现方法 打开\themes\next\source\css\_custom\custom.styl,向里面加入： // 主页文章添加阴影效果 .post { margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); } 在网站底部加上访问量实现效果图 具体实现方法 文档里面也有哦 我用的不蒜子统计 添加热度实现效果图 具体实现方法 next主题集成leanCloud，打开/themes/next/layout/_macro/post.swig,在画红线的区域添加℃： 然后打开，/themes/next/languages/zh-Hans.yml,将画红框的改为热度就可以了 网站底部字数统计实现效果图 具体方法实现 切换到根目录下，然后运行如下代码 $ npm install hexo-wordcount --save 然后在/themes/next/layout/_partials/footer.swig文件尾部加上： &lt;div class=&quot;theme-info&quot;&gt; &lt;div class=&quot;powered-by&quot;&gt;&lt;/div&gt; &lt;span class=&quot;post-count&quot;&gt;博客全站共{{ totalcount(site) }}字&lt;/span&gt; &lt;/div&gt; 添加 README.md 文件每个项目下一般都有一个 README.md 文件，但是使用 hexo 部署到仓库后，项目下是没有 README.md 文件的。 在 Hexo 目录下的 source 根目录下添加一个 # README.md #文件，修改站点配置文件 _config.yml，将 # skip_render # 参数的值设置为 skip_render: README.md 保存退出即可。再次使用 hexo d 命令部署博客的时候就不会在渲染 README.md这个文件了。 设置网站的图标Favicon实现效果图 具体方法实现 在EasyIcon中找一张（32*32）的ico图标,或者去别的网站下载或者制作，并将图标名称改为favicon.ico，然后把图标放在/themes/next/source/images里，并且修改主题配置文件： # Put your favicon.ico into `hexo-site/source/` directory. favicon: /favicon.ico 实现统计功能实现效果图 具体实现方法 在根目录下安装 hexo-wordcount,运行： $ npm install hexo-wordcount --save 然后在主题的配置文件中，配置如下： # Post wordcount display settings # Dependencies: https://github.com/willin/hexo-wordcount post_wordcount: item_text: true wordcount: true min2read: true 添加顶部加载条实现效果图 具体看我博客加载效果：一碗汤不热 具体实现方法 现在使用的最新版的next主题，只需修改主题配置文件(_config.yml)将pace: false改为pace: true就行了，你还可以换不同样式的加载条，如下图： 添加网易云跟帖具体方法实现 Next文档 隐藏网页底部powered By Hexo强力驱动打开themes/next/layout/_partials/footer.swig,使用隐藏之间的代码即可，或者直接删除。位置如图： 修改网页底部的桃心还是打开themes/next/layout/_partials/footer.swig，找到：，然后还是在图标库中找到你自己喜欢的图标，然后修改画红线的部分就可以了。 文章加密访问实现效果图 看我這篇文章，传送门—-&gt;一碗汤不热 具体实现方法 打开themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig文件,在标签内插入这样一段代码： &lt;script&gt; (function(){ if(&apos;{{ page.password }}&apos;){ if (prompt(&apos;请输入文章密码&apos;) !== &apos;{{ page.password }}&apos;){ alert(&apos;密码错误！&apos;); history.back(); } } })(); &lt;/script&gt; 然后在文章上写成类似这样： 添加jiathis分享实现效果图 实现方法 在主题配置文件中，jiathis为true，就行了，如下图 如果你想自定义话，打开themes/next/layout/_partials/share/jiathis.swig修改画红线部分就可以了 博文置顶修改 hero-generator-index 插件，把文件：node_modules/hexo-generator-index/lib/generator.js内的代码替换为： &apos;use strict&apos;; var pagination = require(&apos;hexo-pagination&apos;); module.exports = function(locals){ var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) { if(a.top &amp;&amp; b.top) { // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 } else if(a.top &amp;&amp; !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; } else if(!a.top &amp;&amp; b.top) { return 1; } else return b.date - a.date; // 都没定义按照文章日期降序排 }); var paginationDir = config.pagination_dir || &apos;page&apos;; return pagination(&apos;&apos;, posts, { perPage: config.index_generator.per_page, layout: [&apos;index&apos;, &apos;archive&apos;], format: paginationDir + &apos;/%d/&apos;, data: { __index: true } }); }; 在文章中添加top 值，数值越大文章越靠前，如 --- title: 为Hexo添加文章置顶功能 date: 2017-05-22 22:45:48 tags: hexo categories: hexo copyright: true `top: 100` --- 修改字体大小打开\themes\next\source\css\ _variables\base.styl文件，将$font-size-base改成16px，如下所示： $font-size-base=16px 修改打赏字体不闪动修改文件next/source/css/_common/components/post/post-reward.styl，然后注释其中的函数wechat:hover和alipay:hover，如下： /* 注释文字闪动函数 #wechat:hover p{ animation: roll 0.1s infinite linear; -webkit-animation: roll 0.1s infinite linear; -moz-animation: roll 0.1s infinite linear; } #alipay:hover p{ animation: roll 0.1s infinite linear; -webkit-animation: roll 0.1s infinite linear; -moz-animation: roll 0.1s infinite linear; } */ 侧边栏推荐阅读看這里—&gt;Next文档 参考的文章： http://blog.csdn.net/MasterAnt_D/articledetails/56839222 http://zidingyi4qh.com/2017/04/27/NexT%E5%BA%95%E9%83%A8logo%E6%B7%BB%E5%8A%A0%E8%AE%BF%E9%97%AE%E9%87%8F/ https://fuyis.me/2017/01/25/Hexo-theme-next-and-optimized-configuration/ http://www.vitah.net/posts/20f300cc/ http://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/ 总结以上功能我基本都已经明白其中原理，也部署在博客当中，总结分享出来给大家以供学习之用，有些功能是看的很多大神文章，在此深深感谢，从建立博客之初到现在，学到了很多未知的知识，成就感爆棚。 一碗汤不热]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo主题</tag>
        <tag>个性化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript正则表达式]]></title>
    <url>%2F2017%2F06%2F08%2Fsite4%2F</url>
    <content type="text"><![CDATA[概述正则表达式，又称为规则表达式，（Regular Expression）简写：RE,regex或regxp,计算机科学的一个概念。用来检索，替换那些符合某个模式（规则）的文本。 特点 灵活性，逻辑性和功能性非常的强； 可以迅速地采用极简单的方式达到字符串的复杂控制。 对于刚接触的人来说，比较晦涩难懂。 匹配原理现在有字符串”abcde“,用正则表达式/bcd/进行匹配。首先是表达式b字符在字符串中查找第二个字符b匹配上了，然后用表达式c字符在字符串的b字符之后查找，如果是c字符则匹配成功，再次使用表达式d字符在字符串的c字符之后查找。如果表达式c字符在字符串的b字符之后没能匹配到c字符，则匹配失败，将再次用表达式b字符开始从字符串的b字符之后开始查找。 当表达式没有说明是全局查找时，表达式找到第一个匹配成功的字符串后就返回。当要做全局查找时，将可能返回一个结果数组。 常用于表单验证 减轻服务器的压力 保证输入的数据符合要求 代码简洁，严谨验证文本框内容 JavaScript正则表达式符号 #常用JavaScript正则表达式 匹配数字：/\d+/ 匹配子字符串：/abc/ 匹配IP地址:：/(\d{1,3}.){3}\d{1,3}/ 匹配邮箱：/\w+@.+.\w+/ 匹配身份证号码：/dddddd yyyymmdd xxx y/gJavaScript的RegExp对象RegExp对象的构造函数第一个参数为正则表达式的文本内容，第二个参数则为可选项标志，标志可以组合使用。 g(全文查找) i(忽略大小写) m(多行查找) 普通方式 var reg = /表达式/附加参数 构造函数 var reg = new RegExp(&quot;表达式&quot;,&quot;附加参数&quot;) 示例1：var re1 = new RegExp(&quot;a&quot;,&quot;g&quot;);//匹配所有的a var re2 = new RegExp(&quot;a&quot;,&quot;gi&quot;);//匹配所有的a或A 正则表达式还有另外一种正则表达式字面量的声明方式 示例2：var re1 = /a/;//匹配a var re2 = /a/gi;//匹配所有的a或A RegExp对象的方法与属性方法test()exec()compile() 属性sourcelastindex$1…$9input($_)lastMatch($&amp;)lastParen($+)leftContext($’)rightContext($’) 正则表达式支持JavaScript字符串对象String的search方法var str = &quot;hello world,hello world&quot;; alert(str.search(&quot;world&quot;));//输出6 alert(str.search(/world/));//输出6 ps：引号包围的是字符串，斜杠包围的是正则表达式。 String的match()方法var str2 = &quot;1 plus 2 equal 3 1&quot; alert(atr2.match(/\d+/g));//输出1，2，3，1 String的Replase()方法语法:stringObject.replace(regexp/substr,replacement); 总结想好了再写]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>Script</tag>
        <tag>正则表达式</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java面试集锦：常见的java异常信息]]></title>
    <url>%2F2017%2F06%2F05%2Fsite3%2F</url>
    <content type="text"><![CDATA[目的這篇文章主要介绍了java平时常见的一些异常报错信息，我以文档的形式记录下来，用来复习巩固及其面试用，平时早上地铁公交拿出手机可以看一下。 异常类基本就那两种类型： Error Exception 如果说Error类代表了系统和编译的错误；那 Exception类就代表了标准Java库方法所激发的异常。Error类的异常是不允许捕获的，而发生Exception异常的程序可以通过捕获处理后正常运行保持程序的可读性及可靠性。 这其中 Exception类还包含运行异常类（Runtime_Exception）和非运行异常类（Non_RuntimeException）这两个直接的子类。 运行异常类对应于编译错误，它是指Java程序在运行时产生的由解释器引发的各种异常。运行异常可能出现在任何地方，且出现频率很高，出现运行错误往往表示代码有错误，如：算数异常（如被0除）、下标异常（如数组越界）等。 非运行异常又称为可检测异常。Java编译器利用分析方法或构造方法中可能产生的结果来检测Java程序中是否含有检测异常的处理程序，对于每个可能的可检测异常，方法或构造方法的throws子句必须列出该异常对应的类。如：java.lang java.util 、 http://java.net中定义的异常都是非运行异常。 我整理了一下，常见的Java Exception异常 java.lang.ArithmeticException：算术条件异常。譬如：整数除零等。 java.lang.ArrayIndexOutOfBoundsException：数组索引越界异常。当对数组的索引值为负数或大于等于数组大小时抛出。 java.lang.ArrayStoreException：数组存储异常。当向数组中存放非数组声明类型对象时抛出。 java.lang.ClassCastException：类造型异常。假设有类A和B（A不是B的父类或子类），O是A的实例，那么当强制将O构造为类B的实例时抛出该异常。该异常经常被称为强制类型转换异常。 java.lang.ClassNotFoundException：找不到类异常。当应用试图根据字符串形式的类名构造类，而在遍历CLASSPAH之后找不到对应名称的class文件时，抛出该异常。 java.lang.CloneNotSupportedException：不支持克隆异常。当没有实现Cloneable接口或者不支持克隆方法时,调用其clone方法则抛出该异常。 java.lang.EnumConstantNotPresentException：枚举常量不存在异常。当应用试图通过名称和枚举类型访问一个枚举对象，但该枚举对象并不包含常量时，抛出该异常。 java.lang.Exception：根异常。用以描述应用程序希望捕获的情况。 java.lang.IllegalAccessException：违法的访问异常。当应用试图通过反射方式创建某个类的实例、访问该类属性、调用该类方法，而当时又无法访问类的、属性的、方法的或构造方法的定义时抛出该异常。 java.lang.IllegalMonitorStateException：违法的监控状态异常。当某个线程试图等待一个自己并不拥有的对象（O）的监控器或者通知其他线程等待该对象（O）的监控器时，抛出该异常。 java.lang.IllegalStateException：违法的状态异常。当在Java环境和应用尚未处于某个方法的合法调用状态，而调用了该方法时，抛出该异常。 12.java.lang.IllegalThreadStateException：违法的线程状态异常。当县城尚未处于某个方法的合法调用状态，而调用了该方法时，抛出异常。 java.lang.IndexOutOfBoundsException：索引越界异常。当访问某个序列的索引值小于0或大于等于序列大小时，抛出该异常。 14.java.lang.InstantiationException：实例化异常。当试图通过newInstance方法创建某个类的实例，而该类是一个抽象类或接口时，抛出该异常。 java.lang.InterruptedException：被中止异常。当某个线程处于长时间的等待、休眠或其他暂停状态，而此时其他的线程通过Thread的interrupt方法终止该线程时抛出该异常。 java.lang.NegativeArraySizeException：数组大小为负值异常。当使用负数大小值创建数组时抛出该异常。 17.java.lang.NoSuchFieldException：属性不存在异常。当访问某个类的不存在的属性时抛出该异常。 java.lang.NoSuchMethodException：方法不存在异常。当访问某个类的不存在的方法时抛出该异常。 java.lang.NullPointerException：空指针异常。当应用试图在要求使用对象的地方使用了null时，抛出该异常。譬如：调用null对象的实例方法、访问null对象的属性、计算null对象的长度、使用throw语句抛出null等等。 java.lang.NumberFormatException：数字格式异常。当试图将一个String转换为指定的数字类型，而该字符串确不满足数字类型要求的格式时，抛出该异常。 java.lang.RuntimeException：运行时异常。是所有Java虚拟机正常操作期间可以被抛出的异常的父类。 java.lang.SecurityException：安全异常。由安全管理器抛出，用于指示违反安全情况的异常。 java.lang.StringIndexOutOfBoundsException：字符串索引越界异常。当使用索引值访问某个字符串中的字符，而该索引值小于0或大于等于序列大小时，抛出该异常。 java.lang.TypeNotPresentException：类型不存在异常。当应用试图以某个类型名称的字符串表达方式访问该类型，但是根据给定的名称又找不到该类型是抛出该异常。该异常与ClassNotFoundException的区别在于该异常是unchecked（不被检查）异常，而ClassNotFoundException是checked（被检查）异常。 java.lang.UnsupportedOperationException：不支持的方法异常。指明请求的方法不被支持情况的异常。 常见的Error类异常 java.lang.AbstractMethodError： 抽象方法错误。当应用试图调用抽象方法时抛出。 java.lang.AssertionError： 断言错。用来指示一个断言失败的情况。 java.lang.ClassCircularityError： 类循环依赖错误。在初始化一个类时，若检测到类之间循环依赖则抛出该异常。 java.lang.ClassFormatError： 类格式错误。当Java虚拟机试图从一个文件中读取Java类，而检测到该文件的内容不符合类的有效格式时抛出。 5.java.lang.Error： 错误。是所有错误的基类，用于标识严重的程序运行问题。这些问题通常描述一些不应被应用程序捕获的反常情况。 java.lang.ExceptionInInitializerError： 初始化程序错误。当执行一个类的静态初始化程序的过程中，发生了异常时抛出。静态初始化程序是指直接包含于类中的static语句段。 java.lang.IllegalAccessError： 违法访问错误。当一个应用试图访问、修改某个类的域（Field）或者调用其方法，但是又违反域或方法的可见性声明，则抛出该异常。 java.lang.IncompatibleClassChangeError： 不兼容的类变化错误。当正在执行的方法所依赖的类定义发生了不兼容的改变时，抛出该异常。一般在修改了应用中的某些类的声明定义而没有对整个应用重新编译而直接运行的情况下，容易引发该错误。 java.lang.InstantiationError： 实例化错误。当一个应用试图通过Java的new操作符构造一个抽象类或者接口时抛出该异常. 10.java.lang.InternalError： 内部错误。用于指示Java虚拟机发生了内部错误。 java.lang.LinkageError： 链接错误。该错误及其所有子类指示某个类依赖于另外一些类，在该类编译之后，被依赖的类改变了其类定义而没有重新编译所有的类，进而引发错误的情况。 java.lang.NoClassDefFoundError： 未找到类定义错误。当Java虚拟机或者类装载器试图实例化某个类，而找不到该类的定义时抛出该错误。 java.lang.NoSuchFieldError： 域不存在错误。当应用试图访问或者修改某类的某个域，而该类的定义中没有该域的定义时抛出该错误。 java.lang.NoSuchMethodError ：方法不存在错误。当应用试图调用某类的某个方法，而该类的定义中没有该方法的定义时抛出该错误。 java.lang.OutOfMemoryError： 内存不足错误。当可用内存不足以让Java虚拟机分配给一个对象时抛出该错误。 java.lang.StackOverflowError： 堆栈溢出错误。当一个应用递归调用的层次太深而导致堆栈溢出时抛出该错误。 java.lang.ThreadDeath： 线程结束。当调用Thread类的stop方法时抛出该错误，用于指示线程结束。 java.lang.UnknownError： 未知错误。用于指示Java虚拟机发生了未知严重错误的情况。 java.lang.UnsatisfiedLinkError： 未满足的链接错误。当Java虚拟机未找到某个类的声明为native方法的本机语言定义时抛出。 20.java.lang.UnsupportedClassVersionError： 不支持的类版本错误。当Java虚拟机试图从读取某个类文件，但是发现该文件的主、次版本号不被当前Java虚拟机支持的时候，抛出该错误。 java.lang.VerifyError： 验证错误。当验证器检测到某个类文件中存在内部不兼容或者安全问题时抛出该错误。 java.lang.VirtualMachineError： 虚拟机错误。用于指示虚拟机被破坏或者继续执行操作所需的资源不足的情况。 最后面是几种不经常出现但是偶尔而会出现的Java异常 javax.servlet.jsp.JspException: Cannot retrieve mapping for action /Login ：这个异常中就是系统没有找到匹配的action也就是 action没有在struts-config.xml中定义。也可能是打错了字符或者是某些不符合规则，可以使用strutsconsole工具来检查。 org.apache.jasper.JasperException: Cannot retrieve definition for form bean null： 这个异常是因为Struts根据struts-config.xml中的mapping没有找到action期望的form bean。action和form都应该各自有一个name属性，并且要精确匹配（包括大小写） javax.servlet.jsp.JspException: No getter method for property username of bean org.apache.struts.taglib.html.BEAN：这个异常是 没有位form bean中的某个变量定义getter方法， 这个错误主要发生在表单提交的FormBean中，用struts标记时，在FormBean中必须有一个getUsername方法。注意字母“U”。（大写） java.lang.NoClassDefFoundError: org/apache/struts/action/ActionForm： 这个异常是因为classpath中找不到相应的Java .class文件。如果这个错误发生在web应用程序的运行时，主要是因为指定的class文件不在web server的classpath中（/WEB-INF/classes和 /WEB-INF/lib）。在上面的错误中，原因是应该找不到ActionForm类。 javax.servlet.jsp.JspException: Cannot find ActionMappings or ActionFormBeans collection： 不是标识Struts actionServlet的标记就是映射.do扩展名的标记或者两者都没有在web.xml中声明。 在struts-config.xml中的打字或者拼写错误也可导致这个异常的发生。例如缺少一个标记的关闭符号/&gt;。最好使用struts console工具检查一下。 另外，load-on-startup必须在web.xml中声明，这要么是一个空标记，要么指定一个数值，这个数值用来表servlet运行的优先级，数值越大优先级越低。 还有一个和使用load-on-startup有关的是使用Struts预编译JSP文件时也可能导致这个异常。 java.lang.NullPointerException at org.apache.struts.util.RequestUtils.forwardURL(RequestUtils.java:1223)：这个异常就是 在struts-config.xml中的forward元素缺少path属性。例如应该是如下形式： javax.servlet.jsp.JspException: Cannot find bean org.apache.struts.taglib.html.BEAN in any scope Probable Causes： 试图在Struts的form标记外使用form的子元素。这常常发生在你在后面使用Struts的html标记。另外要注意可能你不经意使用的无主体的标记。 javax.servlet.jsp.JspException: Missing message for key xx.xx.xx Probable Causes 这个key的值对没有在资源文件ApplicationResources.properties中定义。 资源文件ApplicationResources.properties到 WEB-INF/classes目录下就可以了 Cannot find message resources under key org.apache.struts.action.MESSAGE： 很显然，这个错误是发生在使用资源文件时，而Struts没有找到资源文件。 Strange and seemingly random characters in HTML and on screen, but not in original JSP or servlet.： 混和使用Struts的html:form标记和标准的HTML标记不正确。 使用的编码样式在本页中不支持。 “Document contained no data” in Netscape No data rendered (completely empty) page in Microsoft Internet Explorer： 使用一个Action的派生类而没有实现perform方法或execute方法。 ServletException: BeanUtils.populate： 在用Struts上传文件时,遇到了javax.servlet.ServletException: BeanUtils.populate异常。 我的ActionServlet并没有用到BeanUtils这些工具类。后来仔细检查代码发现是在jsp文件里的form忘了加enctype=”multipart/form-data”了。所以写程序遇到错误或异常应该从多方面考虑问题存在的可能性，想到系统提示信息以外的东西。 1.定义Action后,如果指定了name,那么必须要定义一个与它同名的FormBean才能进行form映射. 2.如果定义Action后,提交页面时出现 “No input attribute for mapping path…”错误,则需要在其input属性中定义转向的页面. 3.如果插入新的数据时出现 “Batch update row count wrong:…”错误,则说明XXX.hbm.xml中指定的key的类型为原始类型(int, long),因为这种类型会自动分配值,而这个值往往会让系统认为已经存在该记录,正确的方法是使用java.lang.Integer或java.lang.Long对象. 4.如果插入数据时出现 “argument type mismatch”错误,可能是你使用了Date等特殊对象,因为struts不能自动从String型转换成Date型,所以,你需要在Action中手动把String型转换成Date型. 5.Hibernate中, Query的iterator比list方法快很多. 6.如果出现 “equal symbol expected”错误,说明你的strtus标签中包含另一个标签或者变量,例如: 或者 这样的情况… 留着抱佛脚用]]></content>
      <categories>
        <category>java</category>
        <category>java异常</category>
      </categories>
      <tags>
        <tag>java异常</tag>
        <tag>异常处理</tag>
        <tag>异常信息</tag>
        <tag>java学习</tag>
        <tag>java面试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为Hexo添加文章置顶功能]]></title>
    <url>%2F2017%2F06%2F02%2Fsite2%2F</url>
    <content type="text"><![CDATA[前言主题竟然没有提供置顶功能….对于我这种强迫症来说，必须得弄上啊，度娘了一些资料，总算能实现其功能了，（只管实现功能哦）其实就是增加一个top值，在hexo生成html时，将top值越高的排在前面就可以了，看我现在的博客就是；其实通过改时间也是可以的。 修改修改站点文件夹下node_modules/hexo-generator-index/lib/generator.js，在生成文章之前进行文章top值排序。 pst xxx scasca sdacajjfj 增加代码 posts.data = posts.data.sort(function(a, b) { if(a.top &amp;&amp; b.top) { // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 } else if(a.top &amp;&amp; !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; } else if(!a.top &amp;&amp; b.top) { return 1; } else return b.date - a.date; // 都没定义按照文章日期降序排 }); 完整文件代码 `&apos;use strict&apos;; var pagination = require(&apos;hexo-pagination&apos;); module.exports = function(locals){ var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) { if(a.top &amp;&amp; b.top) { // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 } else if(a.top &amp;&amp; !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; } else if(!a.top &amp;&amp; b.top) { return 1; } else return b.date - a.date; // 都没定义按照文章日期降序排 }); var paginationDir = config.pagination_dir || &apos;page&apos;; return pagination(&apos;&apos;, posts, { perPage: config.index_generator.per_page, layout: [&apos;index&apos;, &apos;archive&apos;], format: paginationDir + &apos;/%d/&apos;, data: { __index: true } }); }; &apos;use strict&apos;; var pagination = require(&apos;hexo-pagination&apos;); module.exports = function(locals) { var config = this.config; var posts = locals.posts.sort(config.index_generator.order_by); var paginationDir = config.pagination_dir || &apos;page&apos;; return pagination(&apos;&apos;, posts, { perPage: config.index_generator.per_page, layout: [&apos;index&apos;, &apos;archive&apos;], format: paginationDir + &apos;/%d/&apos;, data: { __index: true } }); };` 使用在文章中，增加top值定义，值越大，文章排序越靠前。top值默认为0，若不设置top，则不参与排序。示例： title: 为Hexo添加文章置顶功能（三） categories: hexo tags: [文章置顶，一碗汤不热] top: 1 date: 201-06-01 11:44:40 ## 标题 正文 注意這样修改是没有置顶那个标志的 但是能达到置顶功能就好了，哈哈。 网站备份的时候，记得备份好文件node_modules/hexo-generator-index/lib/generator.js，因为这个文件既不是站点文件，也不是主题文件，而文件夹默认不参与git版本控制，所以迁移博客文件时很容易忽略。让我又想放弃hexo了（逃）]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>文章置顶</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MarkdownPad免费激活注册]]></title>
    <url>%2F2017%2F05%2F16%2Fwrit%2F</url>
    <content type="text"><![CDATA[简介MarkdownPad 是 Windows 平台上一个功能完善的 Markdown 编辑器。应该说是最好用的了。但是免费版有一些限制，还好终于找到了可用的专业版激活码，免费共享给大家。 提供了语法高亮和方便的快捷键功能，给您最好的 Markdown 编写体验。 来试一下： 粗体 (Ctrl+B) and 斜体 (Ctrl+I)引用 (Ctrl+Q)代码块 (Ctrl+K)标题 1, 2, 3 (Ctrl+1, Ctrl+2, Ctrl+3)列表 (Ctrl+U and Ctrl+Shift+O)实时预览，所见即所得 无需猜测您的语法是否正确；每当您敲击键盘，实时预览功能都会立刻准确呈现出文档的显示效果。 为高级用户而设计的稳定的 Markdown编辑器 MarkdownPad 支持多种 Markdown解析引擎，包括 标准 Markdown 、 Markdown 扩展 (包括表格支持) 以及 GitHub 风格 Markdown。 有了标签式多文档界面、PDF 导出、内置的图片上传工具、会话管理、拼写检查、自动保存、语法高亮以及内置的 CSS 管理器，您可以随心所欲地使用 MarkdownPad。 激活信息邮箱地址： Soar360@live.com 授权秘钥： GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ== 其他不知道为何，MarkdownPad 2 的注册私钥泄密了，按照这个逻辑，是可以做成一个注册机的。附送私钥如下。 -----BEGIN RSA PRIVATE KEY----- Proc-Type: 4,ENCRYPTED DEK-Info: DES-EDE3-CBC,CCE015B0820B9A3F 4BiGKVEzt+cLBdilEZR+8Y0YHrarjNX4bT5XbQ5BgTcJwMYnARCKib+BgwX9wPUB 3D7PUwt4m4OGemXXcC4ELUFyMqHIT6SILFSdTTIvnQbsWutx44zyJK9SlP/2uhG8 JIUDdLWVv5kS8J/UcInC5bomKZ5SX3+0ziRpLWkgXoHJ5gjQ+fDNzAKLcNn7Bubq znjoSH8XuGnORp7d4FiRT5Vl9WpnBqyyFSkYwzDOK//iFgHyhYZ5BCInfQMX66Cj wk3Pax/ujSDzYalkkJe8o8VAcEisMoYhSTS9BnRpROn6V4UyAugWMPnEOgiBmO42 HwLoqK7WXCe+wS1UiDnECU2wIU5Z8qL5oKEKFGukakK+mYXh8MHTkYq2ZQZBo8Vy venhBaolrViCWdkJ5MsuqarBJjyCeAS38GAJURxsKnd+Bp7gGAlNI/0OWIcrjIi4 4o/0CaYRHR+PdeuJup5rUKPgGfMW0iOwmMncSM19hIiaU4/hHGYeXrL1aKfZX4ML YxWJ/i6u8U3gcJo/bOvjirxUZOLTfv3n5aDTcxU70ejgmmYLBaxKt32Ib9oLwnL8 AUnWNRPZaNJ/X853ybsGu73vA/6HPw63g0EaNharg21Q1IhuggMvHJiN6Z9d4KGg Vio6++15SVcsyQEGZx+jjv95IEfgwUQXBmkNRZ/KJQQLkKuOuXuvakI5sWdNJLRo xY9W2lHMnY/Yi82V4P5odxFZOmAYK5DHCQ47gw9IzqGjCyxATAYgkoZR+PCP5y9n IZ8oRYbNpykXVvQC0JALgixIZaAjj30wXb1CcD3layQNkrp0O4qVzuqyT7e2aKEq XNeoB0uDNvn10L60QAOG5630uIIFRyXphZgrzScp97ABq7STQ7t4zTZhbmiwnPHq 8xft+mO2rW3puYEHoEkQKwJcPUTpR/s67IIXQMs1y93WpJoOw7doumyNtAoR8EfK m/H4UoJhoiXL755n4CGnET+LEtuFO/0UwdWxj+u503ovWL021DAnKhrGPMpo73ga aL/OBSFSFyxY92qGqfMWNQOaoK5hCRhzp/8Pd+B1tjhnxUNOl1ulytmhJBigU5nV arkgJYmG+Ox15f1YWxmD1EhLOQLUgBruG04cjRnG4LXV+UBKRdcS3bECArFutlTw 6ogbi8cbDJNBbGpnlfIbEgGEe423rCTuoLJcIZfIDvPDsMobd9lCgn2o95N3Ey4U +UT1PEDEhXW0nggdvZGy8y4T0ZIJ6Tn4asWHTsqH1fQYEz3H51pMehfCbxbc6Bbh nuNyrjv0NSNJvOAn71tFPRf6vgO83h5EFS0ov5ASbWchuf7BFpebmOO04aVMXPBe 3nfE1L5in5ApK7AyhfdSPpELCxBUQ0av4k/0yw/P2TRllybgjdoXjlsJqBn7rkqr 4u1H7pytlEWt0mSgZenlGXrOOEaknUe40z9BHNxliA7ET1MQk6veFVfbSFjeVUDk fsFAVE88/KHyMMfGwwcuLdnQnOBHNJ8iJjJF+RZy93QzveZB22+m5cl9SNXIMcEA mOm4Q8CaLwwzZmF9NKV2CjlmUTqOszJv5abS5YdrPavAR6QxGjZfya3nA2ASd6HN -----END RSA PRIVATE KEY----- 原文地址]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>MarkdownPad</tag>
        <tag>MarkdownPad注册码</tag>
        <tag>文本编辑工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信小程序开发之转发功能]]></title>
    <url>%2F2017%2F05%2F16%2Fsite%2F</url>
    <content type="text"><![CDATA[前言之前无聊的时间调试了一个微信小程序。利用一个美女图片的api做的一个微信美女图片浏览的小程序，之前也没有做过,后面上线了发现没有转发分享功能，这点感觉很不爽啊，怎么能没有转发这种高逼格的功能呢？ 赶紧打开微信开发工具 首先参考了一下:官方文档 关键然后添加转发的显示按钮 wx.showShareMenu({ withShareTicket: true }) 这里有很多朋友不知道“path”路径该怎么填，其实就是填当前页面的路径比如我的：页面的路径加id,这个id就是小程序的场景值：这个path路径填正确了，转发后朋友们才能点金进入小程序完成后，点击右上角有转发功能 真机测试也能进去就OK了。]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
        <tag>转发功能</tag>
        <tag>小程序开发</tag>
      </tags>
  </entry>
</search>